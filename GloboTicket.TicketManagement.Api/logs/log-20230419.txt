2023-04-19 12:39:37.350 +03:00 [INF] User profile is available. Using 'C:\Users\abiruk\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-04-19 12:39:37.552 +03:00 [WRN] The ASP.NET Core developer certificate is not trusted. For information about trusting the ASP.NET Core developer certificate, see https://aka.ms/aspnet/https-trust-dev-cert.
2023-04-19 12:39:37.587 +03:00 [INF] Now listening on: https://localhost:7020
2023-04-19 12:39:37.590 +03:00 [INF] Now listening on: http://localhost:5020
2023-04-19 12:39:37.593 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2023-04-19 12:39:37.595 +03:00 [INF] Hosting environment: Development
2023-04-19 12:39:37.595 +03:00 [INF] Content root path: E:\Beck\Projects\.Net\GloboTicket\GloboTicket.TicketManagement\GloboTicket.TicketManagement.Api
2023-04-19 12:39:40.144 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/swagger - -
2023-04-19 12:39:40.198 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/swagger - - - 301 0 - 56.5893ms
2023-04-19 12:39:40.215 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/swagger/index.html - -
2023-04-19 12:39:40.383 +03:00 [WRN] Unable to configure browser refresh script injection on the response. Consider manually adding '<script src="/_framework/aspnetcore-browser-refresh.js"></script>' to the body of the page.
2023-04-19 12:39:40.387 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/swagger/index.html - - - 200 - text/html;charset=utf-8 171.4864ms
2023-04-19 12:39:40.388 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/swagger/swagger-ui.css - -
2023-04-19 12:39:40.388 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/swagger/swagger-ui-bundle.js - -
2023-04-19 12:39:40.388 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/swagger/swagger-ui-standalone-preset.js - -
2023-04-19 12:39:40.397 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/_vs/browserLink - -
2023-04-19 12:39:40.455 +03:00 [INF] Sending file. Request path: '/swagger-ui-standalone-preset.js'. Physical path: 'N/A'
2023-04-19 12:39:40.455 +03:00 [INF] Sending file. Request path: '/swagger-ui.css'. Physical path: 'N/A'
2023-04-19 12:39:40.459 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/swagger/swagger-ui-standalone-preset.js - - - 200 339486 text/javascript 70.8274ms
2023-04-19 12:39:40.461 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/swagger/swagger-ui.css - - - 200 143943 text/css 73.5866ms
2023-04-19 12:39:40.464 +03:00 [INF] Sending file. Request path: '/swagger-ui-bundle.js'. Physical path: 'N/A'
2023-04-19 12:39:40.468 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/swagger/swagger-ui-bundle.js - - - 200 1096145 text/javascript 80.5983ms
2023-04-19 12:39:40.487 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 90.2524ms
2023-04-19 12:39:40.657 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/swagger/v1/swagger.json - -
2023-04-19 12:39:40.687 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/swagger/favicon-32x32.png - -
2023-04-19 12:39:40.688 +03:00 [INF] Sending file. Request path: '/favicon-32x32.png'. Physical path: 'N/A'
2023-04-19 12:39:40.691 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/swagger/favicon-32x32.png - - - 200 628 image/png 4.4524ms
2023-04-19 12:39:40.816 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 158.6687ms
2023-04-19 12:39:51.374 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7020/api/Account/authenticate - -
2023-04-19 12:39:52.457 +03:00 [INF] CORS policy execution successful.
2023-04-19 12:39:52.459 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7020/api/Account/authenticate - - - 204 - - 1085.4518ms
2023-04-19 12:39:52.461 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7020/api/Account/authenticate application/json 54
2023-04-19 12:39:52.468 +03:00 [INF] CORS policy execution successful.
2023-04-19 12:39:52.495 +03:00 [INF] Executing endpoint 'GloboTicket.TicketManagement.Api.Controllers.AccountController.AuthenticateAsync (GloboTicket.TicketManagement.Api)'
2023-04-19 12:39:52.644 +03:00 [INF] Route matched with {action = "Authenticate", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[GloboTicket.TicketManagement.Application.Models.Authentication.AuthenticationResponse]] AuthenticateAsync(GloboTicket.TicketManagement.Application.Models.Authentication.AuthenticationRequest) on controller GloboTicket.TicketManagement.Api.Controllers.AccountController (GloboTicket.TicketManagement.Api).
2023-04-19 12:39:54.470 +03:00 [INF] Executing action method GloboTicket.TicketManagement.Api.Controllers.AccountController.AuthenticateAsync (GloboTicket.TicketManagement.Api) - Validation state: "Valid"
2023-04-19 12:40:03.205 +03:00 [INF] Executed DbCommand (186ms) [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2023-04-19 12:40:03.390 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2023-04-19 12:40:04.383 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__user_Id_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[ClaimType], [a].[ClaimValue], [a].[UserId]
FROM [AspNetUserClaims] AS [a]
WHERE [a].[UserId] = @__user_Id_0
2023-04-19 12:40:04.448 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2023-04-19 12:40:04.494 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2023-04-19 12:40:06.100 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__user_Id_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[ClaimType], [a].[ClaimValue], [a].[UserId]
FROM [AspNetUserClaims] AS [a]
WHERE [a].[UserId] = @__user_Id_0
2023-04-19 12:40:06.105 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2023-04-19 12:40:06.650 +03:00 [INF] Executed action method GloboTicket.TicketManagement.Api.Controllers.AccountController.AuthenticateAsync (GloboTicket.TicketManagement.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 12172.3438ms.
2023-04-19 12:40:06.659 +03:00 [INF] Executing OkObjectResult, writing value of type 'GloboTicket.TicketManagement.Application.Models.Authentication.AuthenticationResponse'.
2023-04-19 12:40:06.671 +03:00 [INF] Executed action GloboTicket.TicketManagement.Api.Controllers.AccountController.AuthenticateAsync (GloboTicket.TicketManagement.Api) in 14018.2225ms
2023-04-19 12:40:06.673 +03:00 [INF] Executed endpoint 'GloboTicket.TicketManagement.Api.Controllers.AccountController.AuthenticateAsync (GloboTicket.TicketManagement.Api)'
2023-04-19 12:40:06.677 +03:00 [INF] HTTP POST /api/Account/authenticate responded 200 in 14183.1728 ms
2023-04-19 12:40:06.688 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7020/api/Account/authenticate application/json 54 - 200 - application/json;+charset=utf-8 14226.3283ms
2023-04-19 12:49:10.499 +03:00 [INF] User profile is available. Using 'C:\Users\abiruk\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-04-19 12:49:10.881 +03:00 [WRN] The ASP.NET Core developer certificate is not trusted. For information about trusting the ASP.NET Core developer certificate, see https://aka.ms/aspnet/https-trust-dev-cert.
2023-04-19 12:49:10.952 +03:00 [INF] Now listening on: https://localhost:7020
2023-04-19 12:49:10.954 +03:00 [INF] Now listening on: http://localhost:5020
2023-04-19 12:49:10.957 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2023-04-19 12:49:10.958 +03:00 [INF] Hosting environment: Development
2023-04-19 12:49:10.960 +03:00 [INF] Content root path: E:\Beck\Projects\.Net\GloboTicket\GloboTicket.TicketManagement\GloboTicket.TicketManagement.Api
2023-04-19 12:49:11.512 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/swagger - -
2023-04-19 12:49:11.614 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/swagger - - - 301 0 - 105.9494ms
2023-04-19 12:49:11.676 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/swagger/index.html - -
2023-04-19 12:49:11.867 +03:00 [WRN] Unable to configure browser refresh script injection on the response. Consider manually adding '<script src="/_framework/aspnetcore-browser-refresh.js"></script>' to the body of the page.
2023-04-19 12:49:11.869 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/swagger/index.html - - - 200 - text/html;charset=utf-8 193.0478ms
2023-04-19 12:49:11.875 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/swagger/swagger-ui.css - -
2023-04-19 12:49:11.875 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/swagger/swagger-ui-standalone-preset.js - -
2023-04-19 12:49:11.875 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/swagger/swagger-ui-bundle.js - -
2023-04-19 12:49:11.884 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/_vs/browserLink - -
2023-04-19 12:49:11.971 +03:00 [INF] Sending file. Request path: '/swagger-ui-standalone-preset.js'. Physical path: 'N/A'
2023-04-19 12:49:11.971 +03:00 [INF] Sending file. Request path: '/swagger-ui.css'. Physical path: 'N/A'
2023-04-19 12:49:11.974 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/swagger/swagger-ui-standalone-preset.js - - - 200 339486 text/javascript 99.0267ms
2023-04-19 12:49:11.979 +03:00 [INF] Sending file. Request path: '/swagger-ui-bundle.js'. Physical path: 'N/A'
2023-04-19 12:49:11.978 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/swagger/swagger-ui.css - - - 200 143943 text/css 103.4242ms
2023-04-19 12:49:11.983 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/swagger/swagger-ui-bundle.js - - - 200 1096145 text/javascript 107.7740ms
2023-04-19 12:49:12.010 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 125.4643ms
2023-04-19 12:49:12.190 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/swagger/v1/swagger.json - -
2023-04-19 12:49:12.328 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 138.2995ms
2023-04-19 12:49:12.416 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/swagger/favicon-32x32.png - -
2023-04-19 12:49:12.424 +03:00 [INF] Sending file. Request path: '/favicon-32x32.png'. Physical path: 'N/A'
2023-04-19 12:49:12.436 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/swagger/favicon-32x32.png - - - 200 628 image/png 19.6608ms
2023-04-19 12:49:40.168 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7020/api/Account/authenticate - -
2023-04-19 12:49:40.273 +03:00 [INF] CORS policy execution successful.
2023-04-19 12:49:40.275 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7020/api/Account/authenticate - - - 204 - - 107.2075ms
2023-04-19 12:49:40.278 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7020/api/Account/authenticate application/json 54
2023-04-19 12:49:40.285 +03:00 [INF] CORS policy execution successful.
2023-04-19 12:49:40.291 +03:00 [INF] Executing endpoint 'GloboTicket.TicketManagement.Api.Controllers.AccountController.AuthenticateAsync (GloboTicket.TicketManagement.Api)'
2023-04-19 12:49:40.321 +03:00 [INF] Route matched with {action = "Authenticate", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[GloboTicket.TicketManagement.Application.Models.Authentication.AuthenticationResponse]] AuthenticateAsync(GloboTicket.TicketManagement.Application.Models.Authentication.AuthenticationRequest) on controller GloboTicket.TicketManagement.Api.Controllers.AccountController (GloboTicket.TicketManagement.Api).
2023-04-19 12:49:40.727 +03:00 [INF] Executing action method GloboTicket.TicketManagement.Api.Controllers.AccountController.AuthenticateAsync (GloboTicket.TicketManagement.Api) - Validation state: "Valid"
2023-04-19 12:49:44.374 +03:00 [INF] Executed DbCommand (69ms) [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2023-04-19 12:49:44.516 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2023-04-19 12:49:44.972 +03:00 [INF] Executed action GloboTicket.TicketManagement.Api.Controllers.AccountController.AuthenticateAsync (GloboTicket.TicketManagement.Api) in 4643.0941ms
2023-04-19 12:49:44.992 +03:00 [INF] Executed endpoint 'GloboTicket.TicketManagement.Api.Controllers.AccountController.AuthenticateAsync (GloboTicket.TicketManagement.Api)'
2023-04-19 12:49:44.998 +03:00 [ERR] HTTP POST /api/Account/authenticate responded 500 in 4706.9187 ms
System.Exception: Credentials for 'brookbeck2@gmail.com' aren't valid.
   at GloboTicket.TicketManagement.Identity.Services.AuthenticationService.AuthenticateAsync(AuthenticationRequest request) in E:\Beck\Projects\.Net\GloboTicket\GloboTicket.TicketManagement\GloboTicket.TicketManagement.Identity\Services\AuthenticationService.cs:line 44
   at GloboTicket.TicketManagement.Api.Controllers.AccountController.AuthenticateAsync(AuthenticationRequest request) in E:\Beck\Projects\.Net\GloboTicket\GloboTicket.TicketManagement\GloboTicket.TicketManagement.Api\Controllers\AccountController.cs:line 22
   at lambda_method6(Closure, Object)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
2023-04-19 12:49:48.115 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7020/api/Account/authenticate application/json 54 - 400 - application/json 7837.2714ms
2023-04-19 12:50:04.679 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7020/api/Account/authenticate - -
2023-04-19 12:50:04.715 +03:00 [INF] CORS policy execution successful.
2023-04-19 12:50:04.716 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7020/api/Account/authenticate - - - 204 - - 37.5100ms
2023-04-19 12:50:04.718 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7020/api/Account/authenticate application/json 54
2023-04-19 12:50:04.719 +03:00 [INF] CORS policy execution successful.
2023-04-19 12:50:04.720 +03:00 [INF] Executing endpoint 'GloboTicket.TicketManagement.Api.Controllers.AccountController.AuthenticateAsync (GloboTicket.TicketManagement.Api)'
2023-04-19 12:50:04.722 +03:00 [INF] Route matched with {action = "Authenticate", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[GloboTicket.TicketManagement.Application.Models.Authentication.AuthenticationResponse]] AuthenticateAsync(GloboTicket.TicketManagement.Application.Models.Authentication.AuthenticationRequest) on controller GloboTicket.TicketManagement.Api.Controllers.AccountController (GloboTicket.TicketManagement.Api).
2023-04-19 12:50:04.764 +03:00 [INF] Executing action method GloboTicket.TicketManagement.Api.Controllers.AccountController.AuthenticateAsync (GloboTicket.TicketManagement.Api) - Validation state: "Valid"
2023-04-19 12:50:13.752 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2023-04-19 12:50:13.757 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2023-04-19 12:50:13.947 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__user_Id_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[ClaimType], [a].[ClaimValue], [a].[UserId]
FROM [AspNetUserClaims] AS [a]
WHERE [a].[UserId] = @__user_Id_0
2023-04-19 12:50:13.989 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2023-04-19 12:50:14.010 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2023-04-19 12:50:15.423 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__user_Id_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[ClaimType], [a].[ClaimValue], [a].[UserId]
FROM [AspNetUserClaims] AS [a]
WHERE [a].[UserId] = @__user_Id_0
2023-04-19 12:50:15.427 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2023-04-19 12:50:15.570 +03:00 [INF] Executed action method GloboTicket.TicketManagement.Api.Controllers.AccountController.AuthenticateAsync (GloboTicket.TicketManagement.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 10800.9897ms.
2023-04-19 12:50:15.577 +03:00 [INF] Executing OkObjectResult, writing value of type 'GloboTicket.TicketManagement.Application.Models.Authentication.AuthenticationResponse'.
2023-04-19 12:50:15.584 +03:00 [INF] Executed action GloboTicket.TicketManagement.Api.Controllers.AccountController.AuthenticateAsync (GloboTicket.TicketManagement.Api) in 10859.6387ms
2023-04-19 12:50:15.587 +03:00 [INF] Executed endpoint 'GloboTicket.TicketManagement.Api.Controllers.AccountController.AuthenticateAsync (GloboTicket.TicketManagement.Api)'
2023-04-19 12:50:15.587 +03:00 [INF] HTTP POST /api/Account/authenticate responded 200 in 10866.9560 ms
2023-04-19 12:50:15.590 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7020/api/Account/authenticate application/json 54 - 200 - application/json;+charset=utf-8 10871.5001ms
2023-04-19 12:51:09.621 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7020/api/Account/register - -
2023-04-19 12:51:09.629 +03:00 [INF] CORS policy execution successful.
2023-04-19 12:51:09.632 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7020/api/Account/register - - - 204 - - 11.1636ms
2023-04-19 12:51:09.634 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7020/api/Account/register application/json 69
2023-04-19 12:51:09.635 +03:00 [INF] CORS policy execution successful.
2023-04-19 12:51:09.635 +03:00 [INF] Executing endpoint 'GloboTicket.TicketManagement.Api.Controllers.AccountController.RegisterAsync (GloboTicket.TicketManagement.Api)'
2023-04-19 12:51:09.641 +03:00 [INF] Route matched with {action = "Register", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[GloboTicket.TicketManagement.Application.Models.Authentication.RegistrationResponse]] RegisterAsync(GloboTicket.TicketManagement.Application.Models.Authentication.RegistrationRequest) on controller GloboTicket.TicketManagement.Api.Controllers.AccountController (GloboTicket.TicketManagement.Api).
2023-04-19 12:51:09.763 +03:00 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2023-04-19 12:51:09.808 +03:00 [INF] Executed action GloboTicket.TicketManagement.Api.Controllers.AccountController.RegisterAsync (GloboTicket.TicketManagement.Api) in 162.7308ms
2023-04-19 12:51:09.831 +03:00 [INF] Executed endpoint 'GloboTicket.TicketManagement.Api.Controllers.AccountController.RegisterAsync (GloboTicket.TicketManagement.Api)'
2023-04-19 12:51:09.832 +03:00 [INF] HTTP POST /api/Account/register responded 400 in 196.3547 ms
2023-04-19 12:51:09.833 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7020/api/Account/register application/json 69 - 400 - application/problem+json;+charset=utf-8 199.8815ms
2023-04-19 14:17:09.591 +03:00 [INF] User profile is available. Using 'C:\Users\abiruk\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-04-19 14:17:09.811 +03:00 [WRN] The ASP.NET Core developer certificate is not trusted. For information about trusting the ASP.NET Core developer certificate, see https://aka.ms/aspnet/https-trust-dev-cert.
2023-04-19 14:17:09.851 +03:00 [INF] Now listening on: https://localhost:7020
2023-04-19 14:17:09.852 +03:00 [INF] Now listening on: http://localhost:5020
2023-04-19 14:17:09.853 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2023-04-19 14:17:09.854 +03:00 [INF] Hosting environment: Development
2023-04-19 14:17:09.855 +03:00 [INF] Content root path: E:\Beck\Projects\.Net\GloboTicket\GloboTicket.TicketManagement\GloboTicket.TicketManagement.Api
2023-04-19 14:17:11.429 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/swagger - -
2023-04-19 14:17:11.535 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/swagger - - - 301 0 - 109.8762ms
2023-04-19 14:17:11.590 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/swagger/index.html - -
2023-04-19 14:17:12.299 +03:00 [WRN] Unable to configure browser refresh script injection on the response. Consider manually adding '<script src="/_framework/aspnetcore-browser-refresh.js"></script>' to the body of the page.
2023-04-19 14:17:12.304 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/swagger/index.html - - - 200 - text/html;charset=utf-8 713.5574ms
2023-04-19 14:17:12.344 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/swagger/swagger-ui.css - -
2023-04-19 14:17:12.345 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/swagger/swagger-ui-bundle.js - -
2023-04-19 14:17:12.345 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/swagger/swagger-ui-standalone-preset.js - -
2023-04-19 14:17:12.371 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/_vs/browserLink - -
2023-04-19 14:17:12.466 +03:00 [INF] Sending file. Request path: '/swagger-ui.css'. Physical path: 'N/A'
2023-04-19 14:17:12.467 +03:00 [INF] Sending file. Request path: '/swagger-ui-standalone-preset.js'. Physical path: 'N/A'
2023-04-19 14:17:12.468 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/swagger/swagger-ui.css - - - 200 143943 text/css 124.1488ms
2023-04-19 14:17:12.470 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/swagger/swagger-ui-standalone-preset.js - - - 200 339486 text/javascript 125.2659ms
2023-04-19 14:17:12.475 +03:00 [INF] Sending file. Request path: '/swagger-ui-bundle.js'. Physical path: 'N/A'
2023-04-19 14:17:12.476 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/swagger/swagger-ui-bundle.js - - - 200 1096145 text/javascript 131.1365ms
2023-04-19 14:17:13.286 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 917.3549ms
2023-04-19 14:17:13.375 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/swagger/v1/swagger.json - -
2023-04-19 14:17:13.438 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/swagger/favicon-32x32.png - -
2023-04-19 14:17:13.441 +03:00 [INF] Sending file. Request path: '/favicon-32x32.png'. Physical path: 'N/A'
2023-04-19 14:17:13.444 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/swagger/favicon-32x32.png - - - 200 628 image/png 5.9883ms
2023-04-19 14:17:13.626 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 252.5299ms
2023-04-19 14:17:31.029 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/api/Category/allwithevents?includeHistory=false - -
2023-04-19 14:17:31.140 +03:00 [INF] CORS policy execution successful.
2023-04-19 14:17:31.146 +03:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2023-04-19 14:17:31.192 +03:00 [INF] AuthenticationScheme: Bearer was challenged.
2023-04-19 14:17:31.197 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/api/Category/allwithevents?includeHistory=false - - - 401 - application/json 167.9945ms
2023-04-19 14:18:16.664 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/api/Category/allwithevents?includeHistory=false - -
2023-04-19 14:18:16.669 +03:00 [INF] CORS policy execution successful.
2023-04-19 14:18:16.674 +03:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2023-04-19 14:18:16.676 +03:00 [INF] AuthenticationScheme: Bearer was challenged.
2023-04-19 14:18:16.678 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/api/Category/allwithevents?includeHistory=false - - - 401 - application/json 14.2960ms
2023-04-19 14:18:42.626 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/api/Category/allwithevents?includeHistory=false - -
2023-04-19 14:18:42.641 +03:00 [INF] CORS policy execution successful.
2023-04-19 14:18:42.654 +03:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2023-04-19 14:18:42.657 +03:00 [INF] AuthenticationScheme: Bearer was challenged.
2023-04-19 14:18:42.658 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/api/Category/allwithevents?includeHistory=false - - - 401 - application/json 32.0273ms
2023-04-19 14:19:21.412 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/api/Category/allwithevents?includeHistory=false - -
2023-04-19 14:19:21.424 +03:00 [INF] CORS policy execution successful.
2023-04-19 14:19:21.426 +03:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2023-04-19 14:19:21.428 +03:00 [INF] AuthenticationScheme: Bearer was challenged.
2023-04-19 14:19:21.430 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/api/Category/allwithevents?includeHistory=false - - - 401 - application/json 17.1530ms
2023-04-19 14:20:06.093 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7020/api/Account/authenticate - -
2023-04-19 14:20:06.106 +03:00 [INF] CORS policy execution successful.
2023-04-19 14:20:06.108 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7020/api/Account/authenticate - - - 204 - - 14.7933ms
2023-04-19 14:20:06.110 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7020/api/Account/authenticate application/json 54
2023-04-19 14:20:06.112 +03:00 [INF] CORS policy execution successful.
2023-04-19 14:20:06.117 +03:00 [INF] Executing endpoint 'GloboTicket.TicketManagement.Api.Controllers.AccountController.AuthenticateAsync (GloboTicket.TicketManagement.Api)'
2023-04-19 14:20:06.140 +03:00 [INF] Route matched with {action = "Authenticate", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[GloboTicket.TicketManagement.Application.Models.Authentication.AuthenticationResponse]] AuthenticateAsync(GloboTicket.TicketManagement.Application.Models.Authentication.AuthenticationRequest) on controller GloboTicket.TicketManagement.Api.Controllers.AccountController (GloboTicket.TicketManagement.Api).
2023-04-19 14:20:06.540 +03:00 [INF] Executing action method GloboTicket.TicketManagement.Api.Controllers.AccountController.AuthenticateAsync (GloboTicket.TicketManagement.Api) - Validation state: "Valid"
2023-04-19 14:20:08.233 +03:00 [INF] Executed DbCommand (62ms) [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2023-04-19 14:20:08.412 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2023-04-19 14:20:08.621 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__user_Id_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[ClaimType], [a].[ClaimValue], [a].[UserId]
FROM [AspNetUserClaims] AS [a]
WHERE [a].[UserId] = @__user_Id_0
2023-04-19 14:20:08.658 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2023-04-19 14:20:08.677 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2023-04-19 14:20:11.347 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__user_Id_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[ClaimType], [a].[ClaimValue], [a].[UserId]
FROM [AspNetUserClaims] AS [a]
WHERE [a].[UserId] = @__user_Id_0
2023-04-19 14:20:11.353 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2023-04-19 14:20:11.495 +03:00 [INF] Executed action method GloboTicket.TicketManagement.Api.Controllers.AccountController.AuthenticateAsync (GloboTicket.TicketManagement.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 4948.1492ms.
2023-04-19 14:20:11.504 +03:00 [INF] Executing OkObjectResult, writing value of type 'GloboTicket.TicketManagement.Application.Models.Authentication.AuthenticationResponse'.
2023-04-19 14:20:11.516 +03:00 [INF] Executed action GloboTicket.TicketManagement.Api.Controllers.AccountController.AuthenticateAsync (GloboTicket.TicketManagement.Api) in 5368.6662ms
2023-04-19 14:20:11.518 +03:00 [INF] Executed endpoint 'GloboTicket.TicketManagement.Api.Controllers.AccountController.AuthenticateAsync (GloboTicket.TicketManagement.Api)'
2023-04-19 14:20:11.521 +03:00 [INF] HTTP POST /api/Account/authenticate responded 200 in 5405.2600 ms
2023-04-19 14:20:11.534 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7020/api/Account/authenticate application/json 54 - 200 - application/json;+charset=utf-8 5423.5289ms
2023-04-19 14:20:15.270 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7020/api/Category/allwithevents?includeHistory=false - -
2023-04-19 14:20:15.271 +03:00 [INF] CORS policy execution successful.
2023-04-19 14:20:15.272 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7020/api/Category/allwithevents?includeHistory=false - - - 204 - - 2.7300ms
2023-04-19 14:20:15.275 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/api/Category/allwithevents?includeHistory=false - -
2023-04-19 14:20:15.383 +03:00 [INF] CORS policy execution successful.
2023-04-19 14:20:15.384 +03:00 [INF] Executing endpoint 'GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetCategoriesWithEvents (GloboTicket.TicketManagement.Api)'
2023-04-19 14:20:15.427 +03:00 [INF] Route matched with {action = "GetCategoriesWithEvents", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[GloboTicket.TicketManagement.Application.Features.Categories.Queries.GetCategoriesListWithEvents.CategoryEventListVm]]] GetCategoriesWithEvents(Boolean) on controller GloboTicket.TicketManagement.Api.Controllers.CategoryController (GloboTicket.TicketManagement.Api).
2023-04-19 14:20:15.521 +03:00 [INF] Executing action method GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetCategoriesWithEvents (GloboTicket.TicketManagement.Api) - Validation state: "Valid"
2023-04-19 14:20:20.796 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[CategoryId], [c].[CreatedBy], [c].[CreatedDate], [c].[LastModifiedBy], [c].[LastModifiedDate], [c].[Name], [e].[EventId], [e].[Artist], [e].[CategoryId], [e].[CreatedBy], [e].[CreatedDate], [e].[Date], [e].[Description], [e].[ImageUrl], [e].[LastModifiedBy], [e].[LastModifiedDate], [e].[Name], [e].[Price]
FROM [Categories] AS [c]
LEFT JOIN [Events] AS [e] ON [c].[CategoryId] = [e].[CategoryId]
ORDER BY [c].[CategoryId]
2023-04-19 14:20:20.968 +03:00 [INF] Executed action method GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetCategoriesWithEvents (GloboTicket.TicketManagement.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 5445.299ms.
2023-04-19 14:20:20.973 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GloboTicket.TicketManagement.Application.Features.Categories.Queries.GetCategoriesListWithEvents.CategoryEventListVm, GloboTicket.TicketManagement.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-04-19 14:20:21.011 +03:00 [INF] Executed action GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetCategoriesWithEvents (GloboTicket.TicketManagement.Api) in 5578.302ms
2023-04-19 14:20:21.013 +03:00 [INF] Executed endpoint 'GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetCategoriesWithEvents (GloboTicket.TicketManagement.Api)'
2023-04-19 14:20:21.014 +03:00 [INF] HTTP GET /api/Category/allwithevents responded 200 in 5629.9874 ms
2023-04-19 14:20:21.017 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/api/Category/allwithevents?includeHistory=false - - - 200 - application/json;+charset=utf-8 5741.4396ms
2023-04-19 14:21:54.288 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7020/api/Category/allwithevents?includeHistory=false - -
2023-04-19 14:21:54.336 +03:00 [INF] CORS policy execution successful.
2023-04-19 14:21:54.337 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7020/api/Category/allwithevents?includeHistory=false - - - 204 - - 49.9309ms
2023-04-19 14:21:54.339 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/api/Category/allwithevents?includeHistory=false - -
2023-04-19 14:21:54.341 +03:00 [INF] CORS policy execution successful.
2023-04-19 14:21:54.342 +03:00 [INF] Executing endpoint 'GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetCategoriesWithEvents (GloboTicket.TicketManagement.Api)'
2023-04-19 14:21:54.343 +03:00 [INF] Route matched with {action = "GetCategoriesWithEvents", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[GloboTicket.TicketManagement.Application.Features.Categories.Queries.GetCategoriesListWithEvents.CategoryEventListVm]]] GetCategoriesWithEvents(Boolean) on controller GloboTicket.TicketManagement.Api.Controllers.CategoryController (GloboTicket.TicketManagement.Api).
2023-04-19 14:21:54.372 +03:00 [INF] Executing action method GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetCategoriesWithEvents (GloboTicket.TicketManagement.Api) - Validation state: "Valid"
2023-04-19 14:21:58.889 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[CategoryId], [c].[CreatedBy], [c].[CreatedDate], [c].[LastModifiedBy], [c].[LastModifiedDate], [c].[Name], [e].[EventId], [e].[Artist], [e].[CategoryId], [e].[CreatedBy], [e].[CreatedDate], [e].[Date], [e].[Description], [e].[ImageUrl], [e].[LastModifiedBy], [e].[LastModifiedDate], [e].[Name], [e].[Price]
FROM [Categories] AS [c]
LEFT JOIN [Events] AS [e] ON [c].[CategoryId] = [e].[CategoryId]
ORDER BY [c].[CategoryId]
2023-04-19 14:21:58.893 +03:00 [INF] Executed action method GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetCategoriesWithEvents (GloboTicket.TicketManagement.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 4519.4649ms.
2023-04-19 14:21:58.894 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GloboTicket.TicketManagement.Application.Features.Categories.Queries.GetCategoriesListWithEvents.CategoryEventListVm, GloboTicket.TicketManagement.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-04-19 14:21:58.895 +03:00 [INF] Executed action GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetCategoriesWithEvents (GloboTicket.TicketManagement.Api) in 4550.5169ms
2023-04-19 14:21:58.896 +03:00 [INF] Executed endpoint 'GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetCategoriesWithEvents (GloboTicket.TicketManagement.Api)'
2023-04-19 14:21:58.897 +03:00 [INF] HTTP GET /api/Category/allwithevents responded 200 in 4555.1870 ms
2023-04-19 14:21:58.898 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/api/Category/allwithevents?includeHistory=false - - - 200 - application/json;+charset=utf-8 4559.4469ms
2023-04-19 14:22:34.899 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7020/api/Category/allwithevents?includeHistory=false - -
2023-04-19 14:22:34.901 +03:00 [INF] CORS policy execution successful.
2023-04-19 14:22:34.915 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7020/api/Category/allwithevents?includeHistory=false - - - 204 - - 15.4657ms
2023-04-19 14:22:34.916 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/api/Category/allwithevents?includeHistory=false - -
2023-04-19 14:22:34.920 +03:00 [INF] CORS policy execution successful.
2023-04-19 14:22:34.921 +03:00 [INF] Executing endpoint 'GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetCategoriesWithEvents (GloboTicket.TicketManagement.Api)'
2023-04-19 14:22:34.928 +03:00 [INF] Route matched with {action = "GetCategoriesWithEvents", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[GloboTicket.TicketManagement.Application.Features.Categories.Queries.GetCategoriesListWithEvents.CategoryEventListVm]]] GetCategoriesWithEvents(Boolean) on controller GloboTicket.TicketManagement.Api.Controllers.CategoryController (GloboTicket.TicketManagement.Api).
2023-04-19 14:22:34.949 +03:00 [INF] Executing action method GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetCategoriesWithEvents (GloboTicket.TicketManagement.Api) - Validation state: "Valid"
2023-04-19 14:22:36.232 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[CategoryId], [c].[CreatedBy], [c].[CreatedDate], [c].[LastModifiedBy], [c].[LastModifiedDate], [c].[Name], [e].[EventId], [e].[Artist], [e].[CategoryId], [e].[CreatedBy], [e].[CreatedDate], [e].[Date], [e].[Description], [e].[ImageUrl], [e].[LastModifiedBy], [e].[LastModifiedDate], [e].[Name], [e].[Price]
FROM [Categories] AS [c]
LEFT JOIN [Events] AS [e] ON [c].[CategoryId] = [e].[CategoryId]
ORDER BY [c].[CategoryId]
2023-04-19 14:22:36.237 +03:00 [INF] Executed action method GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetCategoriesWithEvents (GloboTicket.TicketManagement.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1286.1112ms.
2023-04-19 14:22:36.238 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GloboTicket.TicketManagement.Application.Features.Categories.Queries.GetCategoriesListWithEvents.CategoryEventListVm, GloboTicket.TicketManagement.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-04-19 14:22:36.242 +03:00 [INF] Executed action GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetCategoriesWithEvents (GloboTicket.TicketManagement.Api) in 1312.0282ms
2023-04-19 14:22:36.244 +03:00 [INF] Executed endpoint 'GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetCategoriesWithEvents (GloboTicket.TicketManagement.Api)'
2023-04-19 14:22:36.245 +03:00 [INF] HTTP GET /api/Category/allwithevents responded 200 in 1324.2037 ms
2023-04-19 14:22:36.246 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/api/Category/allwithevents?includeHistory=false - - - 200 - application/json;+charset=utf-8 1329.7718ms
2023-04-19 14:23:37.127 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7020/api/Category/allwithevents?includeHistory=false - -
2023-04-19 14:23:37.142 +03:00 [INF] CORS policy execution successful.
2023-04-19 14:23:37.153 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7020/api/Category/allwithevents?includeHistory=false - - - 204 - - 26.3742ms
2023-04-19 14:23:37.158 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/api/Category/allwithevents?includeHistory=false - -
2023-04-19 14:23:37.161 +03:00 [INF] CORS policy execution successful.
2023-04-19 14:23:37.162 +03:00 [INF] Executing endpoint 'GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetCategoriesWithEvents (GloboTicket.TicketManagement.Api)'
2023-04-19 14:23:37.168 +03:00 [INF] Route matched with {action = "GetCategoriesWithEvents", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[GloboTicket.TicketManagement.Application.Features.Categories.Queries.GetCategoriesListWithEvents.CategoryEventListVm]]] GetCategoriesWithEvents(Boolean) on controller GloboTicket.TicketManagement.Api.Controllers.CategoryController (GloboTicket.TicketManagement.Api).
2023-04-19 14:23:37.191 +03:00 [INF] Executing action method GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetCategoriesWithEvents (GloboTicket.TicketManagement.Api) - Validation state: "Valid"
2023-04-19 14:23:39.490 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[CategoryId], [c].[CreatedBy], [c].[CreatedDate], [c].[LastModifiedBy], [c].[LastModifiedDate], [c].[Name], [e].[EventId], [e].[Artist], [e].[CategoryId], [e].[CreatedBy], [e].[CreatedDate], [e].[Date], [e].[Description], [e].[ImageUrl], [e].[LastModifiedBy], [e].[LastModifiedDate], [e].[Name], [e].[Price]
FROM [Categories] AS [c]
LEFT JOIN [Events] AS [e] ON [c].[CategoryId] = [e].[CategoryId]
ORDER BY [c].[CategoryId]
2023-04-19 14:23:39.492 +03:00 [INF] Executed action method GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetCategoriesWithEvents (GloboTicket.TicketManagement.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 2299.386ms.
2023-04-19 14:23:39.493 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GloboTicket.TicketManagement.Application.Features.Categories.Queries.GetCategoriesListWithEvents.CategoryEventListVm, GloboTicket.TicketManagement.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-04-19 14:23:39.494 +03:00 [INF] Executed action GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetCategoriesWithEvents (GloboTicket.TicketManagement.Api) in 2323.5914ms
2023-04-19 14:23:39.496 +03:00 [INF] Executed endpoint 'GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetCategoriesWithEvents (GloboTicket.TicketManagement.Api)'
2023-04-19 14:23:39.497 +03:00 [INF] HTTP GET /api/Category/allwithevents responded 200 in 2335.4670 ms
2023-04-19 14:23:39.499 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/api/Category/allwithevents?includeHistory=false - - - 200 - application/json;+charset=utf-8 2341.0175ms
2023-04-19 14:25:20.555 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7020/api/Category/allwithevents?includeHistory=false - -
2023-04-19 14:25:20.569 +03:00 [INF] CORS policy execution successful.
2023-04-19 14:25:20.572 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7020/api/Category/allwithevents?includeHistory=false - - - 204 - - 16.5078ms
2023-04-19 14:25:20.574 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/api/Category/allwithevents?includeHistory=false - -
2023-04-19 14:25:20.575 +03:00 [INF] CORS policy execution successful.
2023-04-19 14:25:20.576 +03:00 [INF] Executing endpoint 'GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetCategoriesWithEvents (GloboTicket.TicketManagement.Api)'
2023-04-19 14:25:20.577 +03:00 [INF] Route matched with {action = "GetCategoriesWithEvents", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[GloboTicket.TicketManagement.Application.Features.Categories.Queries.GetCategoriesListWithEvents.CategoryEventListVm]]] GetCategoriesWithEvents(Boolean) on controller GloboTicket.TicketManagement.Api.Controllers.CategoryController (GloboTicket.TicketManagement.Api).
2023-04-19 14:25:20.597 +03:00 [INF] Executing action method GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetCategoriesWithEvents (GloboTicket.TicketManagement.Api) - Validation state: "Valid"
2023-04-19 14:25:21.685 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[CategoryId], [c].[CreatedBy], [c].[CreatedDate], [c].[LastModifiedBy], [c].[LastModifiedDate], [c].[Name], [e].[EventId], [e].[Artist], [e].[CategoryId], [e].[CreatedBy], [e].[CreatedDate], [e].[Date], [e].[Description], [e].[ImageUrl], [e].[LastModifiedBy], [e].[LastModifiedDate], [e].[Name], [e].[Price]
FROM [Categories] AS [c]
LEFT JOIN [Events] AS [e] ON [c].[CategoryId] = [e].[CategoryId]
ORDER BY [c].[CategoryId]
2023-04-19 14:25:21.688 +03:00 [INF] Executed action method GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetCategoriesWithEvents (GloboTicket.TicketManagement.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1089.882ms.
2023-04-19 14:25:21.690 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GloboTicket.TicketManagement.Application.Features.Categories.Queries.GetCategoriesListWithEvents.CategoryEventListVm, GloboTicket.TicketManagement.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-04-19 14:25:21.693 +03:00 [INF] Executed action GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetCategoriesWithEvents (GloboTicket.TicketManagement.Api) in 1113.8154ms
2023-04-19 14:25:21.695 +03:00 [INF] Executed endpoint 'GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetCategoriesWithEvents (GloboTicket.TicketManagement.Api)'
2023-04-19 14:25:21.696 +03:00 [INF] HTTP GET /api/Category/allwithevents responded 200 in 1120.2136 ms
2023-04-19 14:25:21.698 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/api/Category/allwithevents?includeHistory=false - - - 200 - application/json;+charset=utf-8 1123.6532ms
2023-04-19 14:25:36.251 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7020/api/Category/allwithevents?includeHistory=false - -
2023-04-19 14:25:36.252 +03:00 [INF] CORS policy execution successful.
2023-04-19 14:25:36.253 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7020/api/Category/allwithevents?includeHistory=false - - - 204 - - 1.9290ms
2023-04-19 14:25:36.255 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/api/Category/allwithevents?includeHistory=false - -
2023-04-19 14:25:36.257 +03:00 [INF] CORS policy execution successful.
2023-04-19 14:25:36.258 +03:00 [INF] Executing endpoint 'GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetCategoriesWithEvents (GloboTicket.TicketManagement.Api)'
2023-04-19 14:25:36.268 +03:00 [INF] Route matched with {action = "GetCategoriesWithEvents", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[GloboTicket.TicketManagement.Application.Features.Categories.Queries.GetCategoriesListWithEvents.CategoryEventListVm]]] GetCategoriesWithEvents(Boolean) on controller GloboTicket.TicketManagement.Api.Controllers.CategoryController (GloboTicket.TicketManagement.Api).
2023-04-19 14:25:36.294 +03:00 [INF] Executing action method GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetCategoriesWithEvents (GloboTicket.TicketManagement.Api) - Validation state: "Valid"
2023-04-19 14:25:37.605 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[CategoryId], [c].[CreatedBy], [c].[CreatedDate], [c].[LastModifiedBy], [c].[LastModifiedDate], [c].[Name], [e].[EventId], [e].[Artist], [e].[CategoryId], [e].[CreatedBy], [e].[CreatedDate], [e].[Date], [e].[Description], [e].[ImageUrl], [e].[LastModifiedBy], [e].[LastModifiedDate], [e].[Name], [e].[Price]
FROM [Categories] AS [c]
LEFT JOIN [Events] AS [e] ON [c].[CategoryId] = [e].[CategoryId]
ORDER BY [c].[CategoryId]
2023-04-19 14:25:37.607 +03:00 [INF] Executed action method GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetCategoriesWithEvents (GloboTicket.TicketManagement.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1311.4855ms.
2023-04-19 14:25:37.609 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GloboTicket.TicketManagement.Application.Features.Categories.Queries.GetCategoriesListWithEvents.CategoryEventListVm, GloboTicket.TicketManagement.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-04-19 14:25:37.614 +03:00 [INF] Executed action GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetCategoriesWithEvents (GloboTicket.TicketManagement.Api) in 1343.6544ms
2023-04-19 14:25:37.616 +03:00 [INF] Executed endpoint 'GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetCategoriesWithEvents (GloboTicket.TicketManagement.Api)'
2023-04-19 14:25:37.617 +03:00 [INF] HTTP GET /api/Category/allwithevents responded 200 in 1359.3403 ms
2023-04-19 14:25:37.620 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/api/Category/allwithevents?includeHistory=false - - - 200 - application/json;+charset=utf-8 1365.2661ms
2023-04-19 14:26:17.843 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7020/api/Category/allwithevents?includeHistory=false - -
2023-04-19 14:26:17.857 +03:00 [INF] CORS policy execution successful.
2023-04-19 14:26:17.864 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7020/api/Category/allwithevents?includeHistory=false - - - 204 - - 21.0288ms
2023-04-19 14:26:17.869 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/api/Category/allwithevents?includeHistory=false - -
2023-04-19 14:26:17.873 +03:00 [INF] CORS policy execution successful.
2023-04-19 14:26:17.874 +03:00 [INF] Executing endpoint 'GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetCategoriesWithEvents (GloboTicket.TicketManagement.Api)'
2023-04-19 14:26:17.879 +03:00 [INF] Route matched with {action = "GetCategoriesWithEvents", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[GloboTicket.TicketManagement.Application.Features.Categories.Queries.GetCategoriesListWithEvents.CategoryEventListVm]]] GetCategoriesWithEvents(Boolean) on controller GloboTicket.TicketManagement.Api.Controllers.CategoryController (GloboTicket.TicketManagement.Api).
2023-04-19 14:26:17.908 +03:00 [INF] Executing action method GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetCategoriesWithEvents (GloboTicket.TicketManagement.Api) - Validation state: "Valid"
2023-04-19 14:26:20.089 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[CategoryId], [c].[CreatedBy], [c].[CreatedDate], [c].[LastModifiedBy], [c].[LastModifiedDate], [c].[Name], [e].[EventId], [e].[Artist], [e].[CategoryId], [e].[CreatedBy], [e].[CreatedDate], [e].[Date], [e].[Description], [e].[ImageUrl], [e].[LastModifiedBy], [e].[LastModifiedDate], [e].[Name], [e].[Price]
FROM [Categories] AS [c]
LEFT JOIN [Events] AS [e] ON [c].[CategoryId] = [e].[CategoryId]
ORDER BY [c].[CategoryId]
2023-04-19 14:26:20.091 +03:00 [INF] Executed action method GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetCategoriesWithEvents (GloboTicket.TicketManagement.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 2180.7787ms.
2023-04-19 14:26:20.093 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GloboTicket.TicketManagement.Application.Features.Categories.Queries.GetCategoriesListWithEvents.CategoryEventListVm, GloboTicket.TicketManagement.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-04-19 14:26:20.094 +03:00 [INF] Executed action GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetCategoriesWithEvents (GloboTicket.TicketManagement.Api) in 2213.1981ms
2023-04-19 14:26:20.095 +03:00 [INF] Executed endpoint 'GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetCategoriesWithEvents (GloboTicket.TicketManagement.Api)'
2023-04-19 14:26:20.096 +03:00 [INF] HTTP GET /api/Category/allwithevents responded 200 in 2221.7803 ms
2023-04-19 14:26:20.098 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/api/Category/allwithevents?includeHistory=false - - - 200 - application/json;+charset=utf-8 2228.9859ms
2023-04-19 14:26:34.156 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7020/api/Category/allwithevents?includeHistory=false - -
2023-04-19 14:26:34.158 +03:00 [INF] CORS policy execution successful.
2023-04-19 14:26:34.160 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7020/api/Category/allwithevents?includeHistory=false - - - 204 - - 3.1220ms
2023-04-19 14:26:34.161 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/api/Category/allwithevents?includeHistory=false - -
2023-04-19 14:26:34.164 +03:00 [INF] CORS policy execution successful.
2023-04-19 14:26:34.164 +03:00 [INF] Executing endpoint 'GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetCategoriesWithEvents (GloboTicket.TicketManagement.Api)'
2023-04-19 14:26:34.166 +03:00 [INF] Route matched with {action = "GetCategoriesWithEvents", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[GloboTicket.TicketManagement.Application.Features.Categories.Queries.GetCategoriesListWithEvents.CategoryEventListVm]]] GetCategoriesWithEvents(Boolean) on controller GloboTicket.TicketManagement.Api.Controllers.CategoryController (GloboTicket.TicketManagement.Api).
2023-04-19 14:26:34.203 +03:00 [INF] Executing action method GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetCategoriesWithEvents (GloboTicket.TicketManagement.Api) - Validation state: "Valid"
2023-04-19 14:26:35.569 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[CategoryId], [c].[CreatedBy], [c].[CreatedDate], [c].[LastModifiedBy], [c].[LastModifiedDate], [c].[Name], [e].[EventId], [e].[Artist], [e].[CategoryId], [e].[CreatedBy], [e].[CreatedDate], [e].[Date], [e].[Description], [e].[ImageUrl], [e].[LastModifiedBy], [e].[LastModifiedDate], [e].[Name], [e].[Price]
FROM [Categories] AS [c]
LEFT JOIN [Events] AS [e] ON [c].[CategoryId] = [e].[CategoryId]
ORDER BY [c].[CategoryId]
2023-04-19 14:26:35.572 +03:00 [INF] Executed action method GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetCategoriesWithEvents (GloboTicket.TicketManagement.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1367.7379ms.
2023-04-19 14:26:35.573 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GloboTicket.TicketManagement.Application.Features.Categories.Queries.GetCategoriesListWithEvents.CategoryEventListVm, GloboTicket.TicketManagement.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-04-19 14:26:35.575 +03:00 [INF] Executed action GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetCategoriesWithEvents (GloboTicket.TicketManagement.Api) in 1406.5883ms
2023-04-19 14:26:35.577 +03:00 [INF] Executed endpoint 'GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetCategoriesWithEvents (GloboTicket.TicketManagement.Api)'
2023-04-19 14:26:35.578 +03:00 [INF] HTTP GET /api/Category/allwithevents responded 200 in 1414.3339 ms
2023-04-19 14:26:35.580 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/api/Category/allwithevents?includeHistory=false - - - 200 - application/json;+charset=utf-8 1418.8299ms
2023-04-19 14:27:09.129 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7020/api/Category/allwithevents?includeHistory=false - -
2023-04-19 14:27:09.131 +03:00 [INF] CORS policy execution successful.
2023-04-19 14:27:09.133 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7020/api/Category/allwithevents?includeHistory=false - - - 204 - - 4.0191ms
2023-04-19 14:27:09.135 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/api/Category/allwithevents?includeHistory=false - -
2023-04-19 14:27:09.136 +03:00 [INF] CORS policy execution successful.
2023-04-19 14:27:09.137 +03:00 [INF] Executing endpoint 'GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetCategoriesWithEvents (GloboTicket.TicketManagement.Api)'
2023-04-19 14:27:09.138 +03:00 [INF] Route matched with {action = "GetCategoriesWithEvents", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[GloboTicket.TicketManagement.Application.Features.Categories.Queries.GetCategoriesListWithEvents.CategoryEventListVm]]] GetCategoriesWithEvents(Boolean) on controller GloboTicket.TicketManagement.Api.Controllers.CategoryController (GloboTicket.TicketManagement.Api).
2023-04-19 14:27:09.160 +03:00 [INF] Executing action method GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetCategoriesWithEvents (GloboTicket.TicketManagement.Api) - Validation state: "Valid"
2023-04-19 14:27:11.143 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[CategoryId], [c].[CreatedBy], [c].[CreatedDate], [c].[LastModifiedBy], [c].[LastModifiedDate], [c].[Name], [e].[EventId], [e].[Artist], [e].[CategoryId], [e].[CreatedBy], [e].[CreatedDate], [e].[Date], [e].[Description], [e].[ImageUrl], [e].[LastModifiedBy], [e].[LastModifiedDate], [e].[Name], [e].[Price]
FROM [Categories] AS [c]
LEFT JOIN [Events] AS [e] ON [c].[CategoryId] = [e].[CategoryId]
ORDER BY [c].[CategoryId]
2023-04-19 14:27:11.146 +03:00 [INF] Executed action method GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetCategoriesWithEvents (GloboTicket.TicketManagement.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1984.8704ms.
2023-04-19 14:27:11.147 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GloboTicket.TicketManagement.Application.Features.Categories.Queries.GetCategoriesListWithEvents.CategoryEventListVm, GloboTicket.TicketManagement.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-04-19 14:27:11.149 +03:00 [INF] Executed action GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetCategoriesWithEvents (GloboTicket.TicketManagement.Api) in 2009.8149ms
2023-04-19 14:27:11.152 +03:00 [INF] Executed endpoint 'GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetCategoriesWithEvents (GloboTicket.TicketManagement.Api)'
2023-04-19 14:27:11.152 +03:00 [INF] HTTP GET /api/Category/allwithevents responded 200 in 2014.8718 ms
2023-04-19 14:27:11.155 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/api/Category/allwithevents?includeHistory=false - - - 200 - application/json;+charset=utf-8 2019.8289ms
2023-04-19 15:44:49.547 +03:00 [INF] User profile is available. Using 'C:\Users\abiruk\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-04-19 15:44:49.967 +03:00 [WRN] The ASP.NET Core developer certificate is not trusted. For information about trusting the ASP.NET Core developer certificate, see https://aka.ms/aspnet/https-trust-dev-cert.
2023-04-19 15:44:50.019 +03:00 [INF] Now listening on: https://localhost:7020
2023-04-19 15:44:50.030 +03:00 [INF] Now listening on: http://localhost:5020
2023-04-19 15:44:50.037 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2023-04-19 15:44:50.040 +03:00 [INF] Hosting environment: Development
2023-04-19 15:44:50.044 +03:00 [INF] Content root path: E:\Beck\Projects\.Net\GloboTicket\GloboTicket.TicketManagement\GloboTicket.TicketManagement.Api
2023-04-19 15:44:51.756 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/swagger - -
2023-04-19 15:44:51.821 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/swagger - - - 301 0 - 71.9062ms
2023-04-19 15:44:51.845 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/swagger/index.html - -
2023-04-19 15:44:52.086 +03:00 [WRN] Unable to configure browser refresh script injection on the response. Consider manually adding '<script src="/_framework/aspnetcore-browser-refresh.js"></script>' to the body of the page.
2023-04-19 15:44:52.088 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/swagger/index.html - - - 200 - text/html;charset=utf-8 243.0625ms
2023-04-19 15:44:52.107 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/swagger/swagger-ui.css - -
2023-04-19 15:44:52.107 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/swagger/swagger-ui-bundle.js - -
2023-04-19 15:44:52.107 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/swagger/swagger-ui-standalone-preset.js - -
2023-04-19 15:44:52.112 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/_vs/browserLink - -
2023-04-19 15:44:52.186 +03:00 [INF] Sending file. Request path: '/swagger-ui-standalone-preset.js'. Physical path: 'N/A'
2023-04-19 15:44:52.186 +03:00 [INF] Sending file. Request path: '/swagger-ui.css'. Physical path: 'N/A'
2023-04-19 15:44:52.189 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/swagger/swagger-ui-standalone-preset.js - - - 200 339486 text/javascript 81.5970ms
2023-04-19 15:44:52.191 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/swagger/swagger-ui.css - - - 200 143943 text/css 83.8984ms
2023-04-19 15:44:52.196 +03:00 [INF] Sending file. Request path: '/swagger-ui-bundle.js'. Physical path: 'N/A'
2023-04-19 15:44:52.201 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/swagger/swagger-ui-bundle.js - - - 200 1096145 text/javascript 93.1466ms
2023-04-19 15:44:52.220 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 108.2311ms
2023-04-19 15:44:52.400 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/swagger/v1/swagger.json - -
2023-04-19 15:44:54.013 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/swagger/favicon-32x32.png - -
2023-04-19 15:44:54.015 +03:00 [INF] Sending file. Request path: '/favicon-32x32.png'. Physical path: 'N/A'
2023-04-19 15:44:54.019 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/swagger/favicon-32x32.png - - - 200 628 image/png 6.1636ms
2023-04-19 15:44:54.138 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 1738.4738ms
2023-04-19 15:45:07.884 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7020/api/Events - -
2023-04-19 15:45:07.979 +03:00 [INF] CORS policy execution successful.
2023-04-19 15:45:07.982 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7020/api/Events - - - 204 - - 97.9034ms
2023-04-19 15:45:07.983 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/api/Events - -
2023-04-19 15:45:08.141 +03:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '19/04/2023 12:20:11', Current time: '19/04/2023 12:45:08'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-04-19 15:45:08.325 +03:00 [INF] CORS policy execution successful.
2023-04-19 15:45:12.691 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at GloboTicket.TicketManagement.Api.Middleware.ExceptionHandleMiddleware.ConvertException(HttpContext context, Exception execption) in E:\Beck\Projects\.Net\GloboTicket\GloboTicket.TicketManagement\GloboTicket.TicketManagement.Api\Middleware\ExceptionHandleMiddleware.cs:line 32
   at GloboTicket.TicketManagement.Api.Middleware.ExceptionHandleMiddleware.InvokeAsync(HttpContext context) in E:\Beck\Projects\.Net\GloboTicket\GloboTicket.TicketManagement\GloboTicket.TicketManagement.Api\Middleware\ExceptionHandleMiddleware.cs:line 24
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2023-04-19 15:45:12.708 +03:00 [WRN] The response has already started, the error page middleware will not be executed.
2023-04-19 15:45:12.725 +03:00 [ERR] Connection id "0HMQ0QFF3K6HQ", Request id "0HMQ0QFF3K6HQ:00000003": An unhandled exception was thrown by the application.
System.InvalidOperationException: Headers are read-only, response has already started.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpHeaders.ThrowHeadersReadOnlyException()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_ContentType(StringValues value)
   at Microsoft.AspNetCore.Http.DefaultHttpResponse.set_ContentType(String value)
   at GloboTicket.TicketManagement.Api.Middleware.ExceptionHandleMiddleware.ConvertException(HttpContext context, Exception execption) in E:\Beck\Projects\.Net\GloboTicket\GloboTicket.TicketManagement\GloboTicket.TicketManagement.Api\Middleware\ExceptionHandleMiddleware.cs:line 32
   at GloboTicket.TicketManagement.Api.Middleware.ExceptionHandleMiddleware.InvokeAsync(HttpContext context) in E:\Beck\Projects\.Net\GloboTicket\GloboTicket.TicketManagement\GloboTicket.TicketManagement.Api\Middleware\ExceptionHandleMiddleware.cs:line 24
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Watch.BrowserRefresh.BrowserRefreshMiddleware.InvokeAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2023-04-19 15:45:12.731 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/api/Events - - - 500 - text/plain 4747.6383ms
2023-04-19 15:45:55.412 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7020/api/Account/authenticate - -
2023-04-19 15:45:55.425 +03:00 [INF] CORS policy execution successful.
2023-04-19 15:45:55.426 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7020/api/Account/authenticate - - - 204 - - 15.1217ms
2023-04-19 15:45:55.428 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7020/api/Account/authenticate application/json 54
2023-04-19 15:45:55.431 +03:00 [INF] CORS policy execution successful.
2023-04-19 15:45:55.436 +03:00 [INF] Executing endpoint 'GloboTicket.TicketManagement.Api.Controllers.AccountController.AuthenticateAsync (GloboTicket.TicketManagement.Api)'
2023-04-19 15:45:55.459 +03:00 [INF] Route matched with {action = "Authenticate", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[GloboTicket.TicketManagement.Application.Models.Authentication.AuthenticationResponse]] AuthenticateAsync(GloboTicket.TicketManagement.Application.Models.Authentication.AuthenticationRequest) on controller GloboTicket.TicketManagement.Api.Controllers.AccountController (GloboTicket.TicketManagement.Api).
2023-04-19 15:45:55.692 +03:00 [INF] Executing action method GloboTicket.TicketManagement.Api.Controllers.AccountController.AuthenticateAsync (GloboTicket.TicketManagement.Api) - Validation state: "Valid"
2023-04-19 15:45:56.682 +03:00 [INF] Executed DbCommand (43ms) [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2023-04-19 15:45:56.784 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[FirstName], [a].[LastName], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2023-04-19 15:45:56.922 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__user_Id_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[ClaimType], [a].[ClaimValue], [a].[UserId]
FROM [AspNetUserClaims] AS [a]
WHERE [a].[UserId] = @__user_Id_0
2023-04-19 15:45:56.948 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2023-04-19 15:45:56.962 +03:00 [INF] AuthenticationScheme: Identity.Application signed in.
2023-04-19 15:45:59.556 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__user_Id_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[ClaimType], [a].[ClaimValue], [a].[UserId]
FROM [AspNetUserClaims] AS [a]
WHERE [a].[UserId] = @__user_Id_0
2023-04-19 15:45:59.560 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2023-04-19 15:45:59.588 +03:00 [INF] Executed action method GloboTicket.TicketManagement.Api.Controllers.AccountController.AuthenticateAsync (GloboTicket.TicketManagement.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 3887.1641ms.
2023-04-19 15:45:59.596 +03:00 [INF] Executing OkObjectResult, writing value of type 'GloboTicket.TicketManagement.Application.Models.Authentication.AuthenticationResponse'.
2023-04-19 15:45:59.606 +03:00 [INF] Executed action GloboTicket.TicketManagement.Api.Controllers.AccountController.AuthenticateAsync (GloboTicket.TicketManagement.Api) in 4139.6478ms
2023-04-19 15:45:59.609 +03:00 [INF] Executed endpoint 'GloboTicket.TicketManagement.Api.Controllers.AccountController.AuthenticateAsync (GloboTicket.TicketManagement.Api)'
2023-04-19 15:45:59.611 +03:00 [INF] HTTP POST /api/Account/authenticate responded 200 in 4175.4984 ms
2023-04-19 15:45:59.623 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7020/api/Account/authenticate application/json 54 - 200 - application/json;+charset=utf-8 4194.0244ms
2023-04-19 15:46:02.910 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7020/api/Events - -
2023-04-19 15:46:02.912 +03:00 [INF] CORS policy execution successful.
2023-04-19 15:46:02.914 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7020/api/Events - - - 204 - - 3.7423ms
2023-04-19 15:46:02.918 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/api/Events - -
2023-04-19 15:46:02.930 +03:00 [INF] CORS policy execution successful.
2023-04-19 15:46:02.933 +03:00 [INF] Executing endpoint 'GloboTicket.TicketManagement.Api.Controllers.EventsController.GetAllEvents (GloboTicket.TicketManagement.Api)'
2023-04-19 15:46:02.937 +03:00 [INF] Route matched with {action = "GetAllEvents", controller = "Events"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[GloboTicket.TicketManagement.Application.Features.Events.Queries.GetEventsList.EventListVm]]] GetAllEvents() on controller GloboTicket.TicketManagement.Api.Controllers.EventsController (GloboTicket.TicketManagement.Api).
2023-04-19 15:46:02.958 +03:00 [INF] Executing action method GloboTicket.TicketManagement.Api.Controllers.EventsController.GetAllEvents (GloboTicket.TicketManagement.Api) - Validation state: "Valid"
2023-04-19 15:46:03.197 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[EventId], [e].[Artist], [e].[CategoryId], [e].[CreatedBy], [e].[CreatedDate], [e].[Date], [e].[Description], [e].[ImageUrl], [e].[LastModifiedBy], [e].[LastModifiedDate], [e].[Name], [e].[Price]
FROM [Events] AS [e]
2023-04-19 15:46:03.234 +03:00 [INF] Executed action method GloboTicket.TicketManagement.Api.Controllers.EventsController.GetAllEvents (GloboTicket.TicketManagement.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 272.8416ms.
2023-04-19 15:46:03.236 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GloboTicket.TicketManagement.Application.Features.Events.Queries.GetEventsList.EventListVm, GloboTicket.TicketManagement.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-04-19 15:46:03.248 +03:00 [INF] Executed action GloboTicket.TicketManagement.Api.Controllers.EventsController.GetAllEvents (GloboTicket.TicketManagement.Api) in 309.2341ms
2023-04-19 15:46:03.252 +03:00 [INF] Executed endpoint 'GloboTicket.TicketManagement.Api.Controllers.EventsController.GetAllEvents (GloboTicket.TicketManagement.Api)'
2023-04-19 15:46:03.253 +03:00 [INF] HTTP GET /api/Events responded 200 in 319.4591 ms
2023-04-19 15:46:03.255 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/api/Events - - - 200 - application/json;+charset=utf-8 337.5954ms
2023-04-19 15:46:08.724 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7020/api/Events/b419a7ca-3321-4f38-be8e-4d7b6a529319 - -
2023-04-19 15:46:08.726 +03:00 [INF] CORS policy execution successful.
2023-04-19 15:46:08.727 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7020/api/Events/b419a7ca-3321-4f38-be8e-4d7b6a529319 - - - 204 - - 2.8329ms
2023-04-19 15:46:08.728 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/api/Events/b419a7ca-3321-4f38-be8e-4d7b6a529319 - -
2023-04-19 15:46:08.730 +03:00 [INF] CORS policy execution successful.
2023-04-19 15:46:08.731 +03:00 [INF] Executing endpoint 'GloboTicket.TicketManagement.Api.Controllers.EventsController.GetEventById (GloboTicket.TicketManagement.Api)'
2023-04-19 15:46:08.740 +03:00 [INF] Route matched with {action = "GetEventById", controller = "Events"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[GloboTicket.TicketManagement.Application.Features.Events.Queries.GetEventDetail.EventDetailVm]] GetEventById(System.Guid) on controller GloboTicket.TicketManagement.Api.Controllers.EventsController (GloboTicket.TicketManagement.Api).
2023-04-19 15:46:08.768 +03:00 [INF] Executing action method GloboTicket.TicketManagement.Api.Controllers.EventsController.GetEventById (GloboTicket.TicketManagement.Api) - Validation state: "Valid"
2023-04-19 15:46:08.819 +03:00 [INF] Executed DbCommand (21ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[EventId], [e].[Artist], [e].[CategoryId], [e].[CreatedBy], [e].[CreatedDate], [e].[Date], [e].[Description], [e].[ImageUrl], [e].[LastModifiedBy], [e].[LastModifiedDate], [e].[Name], [e].[Price]
FROM [Events] AS [e]
WHERE [e].[EventId] = @__get_Item_0
2023-04-19 15:46:08.836 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[CategoryId], [c].[CreatedBy], [c].[CreatedDate], [c].[LastModifiedBy], [c].[LastModifiedDate], [c].[Name]
FROM [Categories] AS [c]
WHERE [c].[CategoryId] = @__get_Item_0
2023-04-19 15:46:08.868 +03:00 [INF] Executed action method GloboTicket.TicketManagement.Api.Controllers.EventsController.GetEventById (GloboTicket.TicketManagement.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 98.4493ms.
2023-04-19 15:46:08.870 +03:00 [INF] Executing OkObjectResult, writing value of type 'GloboTicket.TicketManagement.Application.Features.Events.Queries.GetEventDetail.EventDetailVm'.
2023-04-19 15:46:08.873 +03:00 [INF] Executed action GloboTicket.TicketManagement.Api.Controllers.EventsController.GetEventById (GloboTicket.TicketManagement.Api) in 131.1261ms
2023-04-19 15:46:08.876 +03:00 [INF] Executed endpoint 'GloboTicket.TicketManagement.Api.Controllers.EventsController.GetEventById (GloboTicket.TicketManagement.Api)'
2023-04-19 15:46:08.878 +03:00 [INF] HTTP GET /api/Events/b419a7ca-3321-4f38-be8e-4d7b6a529319 responded 200 in 146.8020 ms
2023-04-19 15:46:08.880 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/api/Events/b419a7ca-3321-4f38-be8e-4d7b6a529319 - - - 200 - application/json;+charset=utf-8 151.4932ms
2023-04-19 15:46:08.969 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7020/api/Category/all - -
2023-04-19 15:46:08.972 +03:00 [INF] CORS policy execution successful.
2023-04-19 15:46:08.973 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7020/api/Category/all - - - 204 - - 3.4176ms
2023-04-19 15:46:08.975 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/api/Category/all - -
2023-04-19 15:46:08.977 +03:00 [INF] CORS policy execution successful.
2023-04-19 15:46:08.981 +03:00 [INF] Executing endpoint 'GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetAllCategories (GloboTicket.TicketManagement.Api)'
2023-04-19 15:46:08.984 +03:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[GloboTicket.TicketManagement.Application.Features.Categories.Queries.GetCategoriesList.CategoryListVm]]] GetAllCategories() on controller GloboTicket.TicketManagement.Api.Controllers.CategoryController (GloboTicket.TicketManagement.Api).
2023-04-19 15:46:09.004 +03:00 [INF] Executing action method GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetAllCategories (GloboTicket.TicketManagement.Api) - Validation state: "Valid"
2023-04-19 15:46:09.895 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[CategoryId], [c].[CreatedBy], [c].[CreatedDate], [c].[LastModifiedBy], [c].[LastModifiedDate], [c].[Name]
FROM [Categories] AS [c]
2023-04-19 15:46:09.903 +03:00 [INF] Executed action method GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetAllCategories (GloboTicket.TicketManagement.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 896.135ms.
2023-04-19 15:46:09.905 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GloboTicket.TicketManagement.Application.Features.Categories.Queries.GetCategoriesList.CategoryListVm, GloboTicket.TicketManagement.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-04-19 15:46:09.907 +03:00 [INF] Executed action GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetAllCategories (GloboTicket.TicketManagement.Api) in 921.6357ms
2023-04-19 15:46:09.908 +03:00 [INF] Executed endpoint 'GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetAllCategories (GloboTicket.TicketManagement.Api)'
2023-04-19 15:46:09.909 +03:00 [INF] HTTP GET /api/Category/all responded 200 in 927.9760 ms
2023-04-19 15:46:09.911 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/api/Category/all - - - 200 - application/json;+charset=utf-8 936.7206ms
2023-04-19 15:46:17.597 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7020/api/Events - -
2023-04-19 15:46:17.599 +03:00 [INF] CORS policy execution successful.
2023-04-19 15:46:17.600 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7020/api/Events - - - 204 - - 3.1159ms
2023-04-19 15:46:17.602 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/api/Events - -
2023-04-19 15:46:17.604 +03:00 [INF] CORS policy execution successful.
2023-04-19 15:46:17.607 +03:00 [INF] Executing endpoint 'GloboTicket.TicketManagement.Api.Controllers.EventsController.GetAllEvents (GloboTicket.TicketManagement.Api)'
2023-04-19 15:46:17.608 +03:00 [INF] Route matched with {action = "GetAllEvents", controller = "Events"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[GloboTicket.TicketManagement.Application.Features.Events.Queries.GetEventsList.EventListVm]]] GetAllEvents() on controller GloboTicket.TicketManagement.Api.Controllers.EventsController (GloboTicket.TicketManagement.Api).
2023-04-19 15:46:17.629 +03:00 [INF] Executing action method GloboTicket.TicketManagement.Api.Controllers.EventsController.GetAllEvents (GloboTicket.TicketManagement.Api) - Validation state: "Valid"
2023-04-19 15:46:17.635 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[EventId], [e].[Artist], [e].[CategoryId], [e].[CreatedBy], [e].[CreatedDate], [e].[Date], [e].[Description], [e].[ImageUrl], [e].[LastModifiedBy], [e].[LastModifiedDate], [e].[Name], [e].[Price]
FROM [Events] AS [e]
2023-04-19 15:46:17.638 +03:00 [INF] Executed action method GloboTicket.TicketManagement.Api.Controllers.EventsController.GetAllEvents (GloboTicket.TicketManagement.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 6.8731ms.
2023-04-19 15:46:17.639 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GloboTicket.TicketManagement.Application.Features.Events.Queries.GetEventsList.EventListVm, GloboTicket.TicketManagement.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-04-19 15:46:17.640 +03:00 [INF] Executed action GloboTicket.TicketManagement.Api.Controllers.EventsController.GetAllEvents (GloboTicket.TicketManagement.Api) in 30.1647ms
2023-04-19 15:46:17.641 +03:00 [INF] Executed endpoint 'GloboTicket.TicketManagement.Api.Controllers.EventsController.GetAllEvents (GloboTicket.TicketManagement.Api)'
2023-04-19 15:46:17.643 +03:00 [INF] HTTP GET /api/Events responded 200 in 35.8935 ms
2023-04-19 15:46:17.644 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/api/Events - - - 200 - application/json;+charset=utf-8 42.0294ms
2023-04-19 15:46:25.111 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7020/api/Category/all - -
2023-04-19 15:46:25.112 +03:00 [INF] CORS policy execution successful.
2023-04-19 15:46:25.114 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7020/api/Category/all - - - 204 - - 3.3412ms
2023-04-19 15:46:25.117 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/api/Category/all - -
2023-04-19 15:46:25.119 +03:00 [INF] CORS policy execution successful.
2023-04-19 15:46:25.126 +03:00 [INF] Executing endpoint 'GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetAllCategories (GloboTicket.TicketManagement.Api)'
2023-04-19 15:46:25.128 +03:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[GloboTicket.TicketManagement.Application.Features.Categories.Queries.GetCategoriesList.CategoryListVm]]] GetAllCategories() on controller GloboTicket.TicketManagement.Api.Controllers.CategoryController (GloboTicket.TicketManagement.Api).
2023-04-19 15:46:25.147 +03:00 [INF] Executing action method GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetAllCategories (GloboTicket.TicketManagement.Api) - Validation state: "Valid"
2023-04-19 15:46:40.419 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7020/api/Events - -
2023-04-19 15:46:40.438 +03:00 [INF] CORS policy execution successful.
2023-04-19 15:46:40.438 +03:00 [INF] Executed DbCommand (16ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[CategoryId], [c].[CreatedBy], [c].[CreatedDate], [c].[LastModifiedBy], [c].[LastModifiedDate], [c].[Name]
FROM [Categories] AS [c]
2023-04-19 15:46:40.439 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7020/api/Events - - - 204 - - 19.9320ms
2023-04-19 15:46:40.440 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/api/Events - -
2023-04-19 15:46:40.441 +03:00 [INF] Executed action method GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetAllCategories (GloboTicket.TicketManagement.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 15291.9919ms.
2023-04-19 15:46:40.442 +03:00 [INF] CORS policy execution successful.
2023-04-19 15:46:40.442 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GloboTicket.TicketManagement.Application.Features.Categories.Queries.GetCategoriesList.CategoryListVm, GloboTicket.TicketManagement.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-04-19 15:46:40.443 +03:00 [INF] Executing endpoint 'GloboTicket.TicketManagement.Api.Controllers.EventsController.GetAllEvents (GloboTicket.TicketManagement.Api)'
2023-04-19 15:46:40.444 +03:00 [INF] Executed action GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetAllCategories (GloboTicket.TicketManagement.Api) in 15314.0241ms
2023-04-19 15:46:40.444 +03:00 [INF] Route matched with {action = "GetAllEvents", controller = "Events"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[GloboTicket.TicketManagement.Application.Features.Events.Queries.GetEventsList.EventListVm]]] GetAllEvents() on controller GloboTicket.TicketManagement.Api.Controllers.EventsController (GloboTicket.TicketManagement.Api).
2023-04-19 15:46:40.445 +03:00 [INF] Executed endpoint 'GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetAllCategories (GloboTicket.TicketManagement.Api)'
2023-04-19 15:46:40.465 +03:00 [INF] Executing action method GloboTicket.TicketManagement.Api.Controllers.EventsController.GetAllEvents (GloboTicket.TicketManagement.Api) - Validation state: "Valid"
2023-04-19 15:46:40.466 +03:00 [INF] HTTP GET /api/Category/all responded 200 in 15340.2808 ms
2023-04-19 15:46:40.469 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/api/Category/all - - - 200 - application/json;+charset=utf-8 15352.7166ms
2023-04-19 15:46:40.475 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[EventId], [e].[Artist], [e].[CategoryId], [e].[CreatedBy], [e].[CreatedDate], [e].[Date], [e].[Description], [e].[ImageUrl], [e].[LastModifiedBy], [e].[LastModifiedDate], [e].[Name], [e].[Price]
FROM [Events] AS [e]
2023-04-19 15:46:40.477 +03:00 [INF] Executed action method GloboTicket.TicketManagement.Api.Controllers.EventsController.GetAllEvents (GloboTicket.TicketManagement.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 9.8044ms.
2023-04-19 15:46:40.478 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GloboTicket.TicketManagement.Application.Features.Events.Queries.GetEventsList.EventListVm, GloboTicket.TicketManagement.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-04-19 15:46:40.479 +03:00 [INF] Executed action GloboTicket.TicketManagement.Api.Controllers.EventsController.GetAllEvents (GloboTicket.TicketManagement.Api) in 32.1081ms
2023-04-19 15:46:40.481 +03:00 [INF] Executed endpoint 'GloboTicket.TicketManagement.Api.Controllers.EventsController.GetAllEvents (GloboTicket.TicketManagement.Api)'
2023-04-19 15:46:40.482 +03:00 [INF] HTTP GET /api/Events responded 200 in 38.9310 ms
2023-04-19 15:46:40.484 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/api/Events - - - 200 - application/json;+charset=utf-8 43.4573ms
2023-04-19 15:46:52.687 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7020/api/Events/b419a7ca-3321-4f38-be8e-4d7b6a529319 - -
2023-04-19 15:46:52.689 +03:00 [INF] CORS policy execution successful.
2023-04-19 15:46:52.691 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7020/api/Events/b419a7ca-3321-4f38-be8e-4d7b6a529319 - - - 204 - - 3.2820ms
2023-04-19 15:46:52.693 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/api/Events/b419a7ca-3321-4f38-be8e-4d7b6a529319 - -
2023-04-19 15:46:52.694 +03:00 [INF] CORS policy execution successful.
2023-04-19 15:46:52.696 +03:00 [INF] Executing endpoint 'GloboTicket.TicketManagement.Api.Controllers.EventsController.GetEventById (GloboTicket.TicketManagement.Api)'
2023-04-19 15:46:52.697 +03:00 [INF] Route matched with {action = "GetEventById", controller = "Events"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[GloboTicket.TicketManagement.Application.Features.Events.Queries.GetEventDetail.EventDetailVm]] GetEventById(System.Guid) on controller GloboTicket.TicketManagement.Api.Controllers.EventsController (GloboTicket.TicketManagement.Api).
2023-04-19 15:46:52.723 +03:00 [INF] Executing action method GloboTicket.TicketManagement.Api.Controllers.EventsController.GetEventById (GloboTicket.TicketManagement.Api) - Validation state: "Valid"
2023-04-19 15:46:52.729 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[EventId], [e].[Artist], [e].[CategoryId], [e].[CreatedBy], [e].[CreatedDate], [e].[Date], [e].[Description], [e].[ImageUrl], [e].[LastModifiedBy], [e].[LastModifiedDate], [e].[Name], [e].[Price]
FROM [Events] AS [e]
WHERE [e].[EventId] = @__get_Item_0
2023-04-19 15:46:52.734 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[CategoryId], [c].[CreatedBy], [c].[CreatedDate], [c].[LastModifiedBy], [c].[LastModifiedDate], [c].[Name]
FROM [Categories] AS [c]
WHERE [c].[CategoryId] = @__get_Item_0
2023-04-19 15:46:52.737 +03:00 [INF] Executed action method GloboTicket.TicketManagement.Api.Controllers.EventsController.GetEventById (GloboTicket.TicketManagement.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 12.5059ms.
2023-04-19 15:46:52.739 +03:00 [INF] Executing OkObjectResult, writing value of type 'GloboTicket.TicketManagement.Application.Features.Events.Queries.GetEventDetail.EventDetailVm'.
2023-04-19 15:46:52.740 +03:00 [INF] Executed action GloboTicket.TicketManagement.Api.Controllers.EventsController.GetEventById (GloboTicket.TicketManagement.Api) in 39.6737ms
2023-04-19 15:46:52.741 +03:00 [INF] Executed endpoint 'GloboTicket.TicketManagement.Api.Controllers.EventsController.GetEventById (GloboTicket.TicketManagement.Api)'
2023-04-19 15:46:52.742 +03:00 [INF] HTTP GET /api/Events/b419a7ca-3321-4f38-be8e-4d7b6a529319 responded 200 in 46.8358 ms
2023-04-19 15:46:52.744 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/api/Events/b419a7ca-3321-4f38-be8e-4d7b6a529319 - - - 200 - application/json;+charset=utf-8 50.8075ms
2023-04-19 15:46:52.757 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7020/api/Category/all - -
2023-04-19 15:46:52.758 +03:00 [INF] CORS policy execution successful.
2023-04-19 15:46:52.759 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7020/api/Category/all - - - 204 - - 2.2143ms
2023-04-19 15:46:52.760 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/api/Category/all - -
2023-04-19 15:46:52.761 +03:00 [INF] CORS policy execution successful.
2023-04-19 15:46:52.763 +03:00 [INF] Executing endpoint 'GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetAllCategories (GloboTicket.TicketManagement.Api)'
2023-04-19 15:46:52.763 +03:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[GloboTicket.TicketManagement.Application.Features.Categories.Queries.GetCategoriesList.CategoryListVm]]] GetAllCategories() on controller GloboTicket.TicketManagement.Api.Controllers.CategoryController (GloboTicket.TicketManagement.Api).
2023-04-19 15:46:52.780 +03:00 [INF] Executing action method GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetAllCategories (GloboTicket.TicketManagement.Api) - Validation state: "Valid"
2023-04-19 15:46:52.786 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[CategoryId], [c].[CreatedBy], [c].[CreatedDate], [c].[LastModifiedBy], [c].[LastModifiedDate], [c].[Name]
FROM [Categories] AS [c]
2023-04-19 15:46:52.788 +03:00 [INF] Executed action method GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetAllCategories (GloboTicket.TicketManagement.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 4.5935ms.
2023-04-19 15:46:52.789 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GloboTicket.TicketManagement.Application.Features.Categories.Queries.GetCategoriesList.CategoryListVm, GloboTicket.TicketManagement.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-04-19 15:46:52.789 +03:00 [INF] Executed action GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetAllCategories (GloboTicket.TicketManagement.Api) in 25.2786ms
2023-04-19 15:46:52.791 +03:00 [INF] Executed endpoint 'GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetAllCategories (GloboTicket.TicketManagement.Api)'
2023-04-19 15:46:52.791 +03:00 [INF] HTTP GET /api/Category/all responded 200 in 28.6769 ms
2023-04-19 15:46:52.793 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/api/Category/all - - - 200 - application/json;+charset=utf-8 32.1758ms
2023-04-19 15:47:14.972 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7020/api/Events/b419a7ca-3321-4f38-be8e-4d7b6a529319 - -
2023-04-19 15:47:14.982 +03:00 [INF] CORS policy execution successful.
2023-04-19 15:47:14.984 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7020/api/Events/b419a7ca-3321-4f38-be8e-4d7b6a529319 - - - 204 - - 12.0837ms
2023-04-19 15:47:14.986 +03:00 [INF] Request starting HTTP/2 DELETE https://localhost:7020/api/Events/b419a7ca-3321-4f38-be8e-4d7b6a529319 - -
2023-04-19 15:47:14.987 +03:00 [INF] CORS policy execution successful.
2023-04-19 15:47:14.988 +03:00 [INF] Executing endpoint 'GloboTicket.TicketManagement.Api.Controllers.EventsController.Delete (GloboTicket.TicketManagement.Api)'
2023-04-19 15:47:14.994 +03:00 [INF] Route matched with {action = "Delete", controller = "Events"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] Delete(System.Guid) on controller GloboTicket.TicketManagement.Api.Controllers.EventsController (GloboTicket.TicketManagement.Api).
2023-04-19 15:47:15.017 +03:00 [INF] Executing action method GloboTicket.TicketManagement.Api.Controllers.EventsController.Delete (GloboTicket.TicketManagement.Api) - Validation state: "Valid"
2023-04-19 15:47:15.028 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[EventId], [e].[Artist], [e].[CategoryId], [e].[CreatedBy], [e].[CreatedDate], [e].[Date], [e].[Description], [e].[ImageUrl], [e].[LastModifiedBy], [e].[LastModifiedDate], [e].[Name], [e].[Price]
FROM [Events] AS [e]
WHERE [e].[EventId] = @__get_Item_0
2023-04-19 15:47:15.237 +03:00 [INF] Executed DbCommand (59ms) [Parameters=[@p0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Events]
OUTPUT 1
WHERE [EventId] = @p0;
2023-04-19 15:47:15.258 +03:00 [INF] Executed action method GloboTicket.TicketManagement.Api.Controllers.EventsController.Delete (GloboTicket.TicketManagement.Api), returned result Microsoft.AspNetCore.Mvc.NoContentResult in 239.2342ms.
2023-04-19 15:47:15.263 +03:00 [INF] Executing StatusCodeResult, setting HTTP status code 204
2023-04-19 15:47:15.264 +03:00 [INF] Executed action GloboTicket.TicketManagement.Api.Controllers.EventsController.Delete (GloboTicket.TicketManagement.Api) in 268.3203ms
2023-04-19 15:47:15.265 +03:00 [INF] Executed endpoint 'GloboTicket.TicketManagement.Api.Controllers.EventsController.Delete (GloboTicket.TicketManagement.Api)'
2023-04-19 15:47:15.266 +03:00 [INF] HTTP DELETE /api/Events/b419a7ca-3321-4f38-be8e-4d7b6a529319 responded 204 in 277.4511 ms
2023-04-19 15:47:15.267 +03:00 [INF] Request finished HTTP/2 DELETE https://localhost:7020/api/Events/b419a7ca-3321-4f38-be8e-4d7b6a529319 - - - 204 - - 281.1398ms
2023-04-19 15:47:15.294 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7020/api/Events - -
2023-04-19 15:47:15.296 +03:00 [INF] CORS policy execution successful.
2023-04-19 15:47:15.298 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7020/api/Events - - - 204 - - 3.5694ms
2023-04-19 15:47:15.300 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/api/Events - -
2023-04-19 15:47:15.303 +03:00 [INF] CORS policy execution successful.
2023-04-19 15:47:15.304 +03:00 [INF] Executing endpoint 'GloboTicket.TicketManagement.Api.Controllers.EventsController.GetAllEvents (GloboTicket.TicketManagement.Api)'
2023-04-19 15:47:15.305 +03:00 [INF] Route matched with {action = "GetAllEvents", controller = "Events"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[GloboTicket.TicketManagement.Application.Features.Events.Queries.GetEventsList.EventListVm]]] GetAllEvents() on controller GloboTicket.TicketManagement.Api.Controllers.EventsController (GloboTicket.TicketManagement.Api).
2023-04-19 15:47:15.324 +03:00 [INF] Executing action method GloboTicket.TicketManagement.Api.Controllers.EventsController.GetAllEvents (GloboTicket.TicketManagement.Api) - Validation state: "Valid"
2023-04-19 15:47:15.329 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[EventId], [e].[Artist], [e].[CategoryId], [e].[CreatedBy], [e].[CreatedDate], [e].[Date], [e].[Description], [e].[ImageUrl], [e].[LastModifiedBy], [e].[LastModifiedDate], [e].[Name], [e].[Price]
FROM [Events] AS [e]
2023-04-19 15:47:15.332 +03:00 [INF] Executed action method GloboTicket.TicketManagement.Api.Controllers.EventsController.GetAllEvents (GloboTicket.TicketManagement.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 6.2374ms.
2023-04-19 15:47:15.335 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GloboTicket.TicketManagement.Application.Features.Events.Queries.GetEventsList.EventListVm, GloboTicket.TicketManagement.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-04-19 15:47:15.336 +03:00 [INF] Executed action GloboTicket.TicketManagement.Api.Controllers.EventsController.GetAllEvents (GloboTicket.TicketManagement.Api) in 29.3631ms
2023-04-19 15:47:15.338 +03:00 [INF] Executed endpoint 'GloboTicket.TicketManagement.Api.Controllers.EventsController.GetAllEvents (GloboTicket.TicketManagement.Api)'
2023-04-19 15:47:15.340 +03:00 [INF] HTTP GET /api/Events responded 200 in 35.6117 ms
2023-04-19 15:47:15.343 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/api/Events - - - 200 - application/json;+charset=utf-8 43.2205ms
2023-04-19 15:47:20.917 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7020/api/Category/all - -
2023-04-19 15:47:20.919 +03:00 [INF] CORS policy execution successful.
2023-04-19 15:47:20.920 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7020/api/Category/all - - - 204 - - 2.8623ms
2023-04-19 15:47:20.922 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/api/Category/all - -
2023-04-19 15:47:20.925 +03:00 [INF] CORS policy execution successful.
2023-04-19 15:47:20.926 +03:00 [INF] Executing endpoint 'GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetAllCategories (GloboTicket.TicketManagement.Api)'
2023-04-19 15:47:20.928 +03:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[GloboTicket.TicketManagement.Application.Features.Categories.Queries.GetCategoriesList.CategoryListVm]]] GetAllCategories() on controller GloboTicket.TicketManagement.Api.Controllers.CategoryController (GloboTicket.TicketManagement.Api).
2023-04-19 15:47:20.951 +03:00 [INF] Executing action method GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetAllCategories (GloboTicket.TicketManagement.Api) - Validation state: "Valid"
2023-04-19 15:47:20.958 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[CategoryId], [c].[CreatedBy], [c].[CreatedDate], [c].[LastModifiedBy], [c].[LastModifiedDate], [c].[Name]
FROM [Categories] AS [c]
2023-04-19 15:47:20.961 +03:00 [INF] Executed action method GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetAllCategories (GloboTicket.TicketManagement.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 6.9285ms.
2023-04-19 15:47:20.962 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GloboTicket.TicketManagement.Application.Features.Categories.Queries.GetCategoriesList.CategoryListVm, GloboTicket.TicketManagement.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-04-19 15:47:20.963 +03:00 [INF] Executed action GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetAllCategories (GloboTicket.TicketManagement.Api) in 32.3703ms
2023-04-19 15:47:20.964 +03:00 [INF] Executed endpoint 'GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetAllCategories (GloboTicket.TicketManagement.Api)'
2023-04-19 15:47:20.965 +03:00 [INF] HTTP GET /api/Category/all responded 200 in 38.6504 ms
2023-04-19 15:47:20.967 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/api/Category/all - - - 200 - application/json;+charset=utf-8 44.6395ms
2023-04-19 15:47:32.812 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7020/api/Events - -
2023-04-19 15:47:32.813 +03:00 [INF] CORS policy execution successful.
2023-04-19 15:47:32.815 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7020/api/Events - - - 204 - - 2.8151ms
2023-04-19 15:47:32.817 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/api/Events - -
2023-04-19 15:47:32.819 +03:00 [INF] CORS policy execution successful.
2023-04-19 15:47:32.821 +03:00 [INF] Executing endpoint 'GloboTicket.TicketManagement.Api.Controllers.EventsController.GetAllEvents (GloboTicket.TicketManagement.Api)'
2023-04-19 15:47:32.823 +03:00 [INF] Route matched with {action = "GetAllEvents", controller = "Events"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[GloboTicket.TicketManagement.Application.Features.Events.Queries.GetEventsList.EventListVm]]] GetAllEvents() on controller GloboTicket.TicketManagement.Api.Controllers.EventsController (GloboTicket.TicketManagement.Api).
2023-04-19 15:47:32.842 +03:00 [INF] Executing action method GloboTicket.TicketManagement.Api.Controllers.EventsController.GetAllEvents (GloboTicket.TicketManagement.Api) - Validation state: "Valid"
2023-04-19 15:47:32.845 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[EventId], [e].[Artist], [e].[CategoryId], [e].[CreatedBy], [e].[CreatedDate], [e].[Date], [e].[Description], [e].[ImageUrl], [e].[LastModifiedBy], [e].[LastModifiedDate], [e].[Name], [e].[Price]
FROM [Events] AS [e]
2023-04-19 15:47:32.847 +03:00 [INF] Executed action method GloboTicket.TicketManagement.Api.Controllers.EventsController.GetAllEvents (GloboTicket.TicketManagement.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 3.9196ms.
2023-04-19 15:47:32.849 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GloboTicket.TicketManagement.Application.Features.Events.Queries.GetEventsList.EventListVm, GloboTicket.TicketManagement.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-04-19 15:47:32.850 +03:00 [INF] Executed action GloboTicket.TicketManagement.Api.Controllers.EventsController.GetAllEvents (GloboTicket.TicketManagement.Api) in 23.6035ms
2023-04-19 15:47:32.850 +03:00 [INF] Executed endpoint 'GloboTicket.TicketManagement.Api.Controllers.EventsController.GetAllEvents (GloboTicket.TicketManagement.Api)'
2023-04-19 15:47:32.851 +03:00 [INF] HTTP GET /api/Events responded 200 in 29.7964 ms
2023-04-19 15:47:32.853 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/api/Events - - - 200 - application/json;+charset=utf-8 35.2538ms
2023-04-19 15:48:43.361 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7020/api/Category/all - -
2023-04-19 15:48:43.379 +03:00 [INF] CORS policy execution successful.
2023-04-19 15:48:43.380 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7020/api/Category/all - - - 204 - - 18.9190ms
2023-04-19 15:48:43.383 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/api/Category/all - -
2023-04-19 15:48:43.384 +03:00 [INF] CORS policy execution successful.
2023-04-19 15:48:43.386 +03:00 [INF] Executing endpoint 'GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetAllCategories (GloboTicket.TicketManagement.Api)'
2023-04-19 15:48:43.387 +03:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[GloboTicket.TicketManagement.Application.Features.Categories.Queries.GetCategoriesList.CategoryListVm]]] GetAllCategories() on controller GloboTicket.TicketManagement.Api.Controllers.CategoryController (GloboTicket.TicketManagement.Api).
2023-04-19 15:48:43.419 +03:00 [INF] Executing action method GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetAllCategories (GloboTicket.TicketManagement.Api) - Validation state: "Valid"
2023-04-19 15:48:43.424 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[CategoryId], [c].[CreatedBy], [c].[CreatedDate], [c].[LastModifiedBy], [c].[LastModifiedDate], [c].[Name]
FROM [Categories] AS [c]
2023-04-19 15:48:43.427 +03:00 [INF] Executed action method GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetAllCategories (GloboTicket.TicketManagement.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 5.5474ms.
2023-04-19 15:48:43.428 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GloboTicket.TicketManagement.Application.Features.Categories.Queries.GetCategoriesList.CategoryListVm, GloboTicket.TicketManagement.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-04-19 15:48:43.429 +03:00 [INF] Executed action GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetAllCategories (GloboTicket.TicketManagement.Api) in 38.3981ms
2023-04-19 15:48:43.430 +03:00 [INF] Executed endpoint 'GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetAllCategories (GloboTicket.TicketManagement.Api)'
2023-04-19 15:48:43.430 +03:00 [INF] HTTP GET /api/Category/all responded 200 in 44.4561 ms
2023-04-19 15:48:43.432 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/api/Category/all - - - 200 - application/json;+charset=utf-8 49.1744ms
2023-04-19 15:49:50.739 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7020/api/Events - -
2023-04-19 15:49:50.742 +03:00 [INF] CORS policy execution successful.
2023-04-19 15:49:50.744 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7020/api/Events - - - 204 - - 5.1279ms
2023-04-19 15:49:50.746 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7020/api/Events application/json 340
2023-04-19 15:49:50.748 +03:00 [INF] CORS policy execution successful.
2023-04-19 15:49:50.750 +03:00 [INF] Executing endpoint 'GloboTicket.TicketManagement.Api.Controllers.EventsController.Create (GloboTicket.TicketManagement.Api)'
2023-04-19 15:49:50.754 +03:00 [INF] Route matched with {action = "Create", controller = "Events"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Guid]] Create(GloboTicket.TicketManagement.Application.Features.Events.Commands.CreateEvent.CreateEventCommand) on controller GloboTicket.TicketManagement.Api.Controllers.EventsController (GloboTicket.TicketManagement.Api).
2023-04-19 15:49:50.799 +03:00 [INF] Executing action method GloboTicket.TicketManagement.Api.Controllers.EventsController.Create (GloboTicket.TicketManagement.Api) - Validation state: "Valid"
2023-04-19 15:50:31.603 +03:00 [INF] Executed action GloboTicket.TicketManagement.Api.Controllers.EventsController.Create (GloboTicket.TicketManagement.Api) in 40845.6922ms
2023-04-19 15:50:31.604 +03:00 [INF] Executed endpoint 'GloboTicket.TicketManagement.Api.Controllers.EventsController.Create (GloboTicket.TicketManagement.Api)'
2023-04-19 15:50:31.605 +03:00 [ERR] HTTP POST /api/Events responded 500 in 40855.4310 ms
System.NullReferenceException: Object reference not set to an instance of an object.
   at GloboTicket.TicketManagement.Application.Features.Events.Commands.CreateEvent.CreateEventCommandValidator.EventNameAndDateUnique(CreateEventCommand e, CancellationToken cancellationToken) in E:\Beck\Projects\.Net\GloboTicket\GloboTicket.TicketManagement\GloboTicket.TicketManagement.Application\Features\Events\Commands\CreateEvent\CreateEventCommandValidator.cs:line 32
   at FluentValidation.Internal.RuleComponent`2.ValidateAsync(ValidationContext`1 context, TProperty value, Boolean useAsync, CancellationToken cancellation) in /_/src/FluentValidation/Internal/RuleComponent.cs:line 71
   at FluentValidation.Internal.PropertyRule`2.ValidateAsync(ValidationContext`1 context, Boolean useAsync, CancellationToken cancellation) in /_/src/FluentValidation/Internal/PropertyRule.cs:line 143
   at FluentValidation.AbstractValidator`1.ValidateInternalAsync(ValidationContext`1 context, Boolean useAsync, CancellationToken cancellation) in /_/src/FluentValidation/AbstractValidator.cs:line 241
   at FluentValidation.AbstractValidator`1.ValidateAsync(ValidationContext`1 context, CancellationToken cancellation) in /_/src/FluentValidation/AbstractValidator.cs:line 220
   at GloboTicket.TicketManagement.Application.Features.Events.Commands.CreateEvent.CreateEventCommandHadler.Handle(CreateEventCommand request, CancellationToken cancellationToken) in E:\Beck\Projects\.Net\GloboTicket\GloboTicket.TicketManagement\GloboTicket.TicketManagement.Application\Features\Events\Commands\CreateEvent\CreateEventCommandHadler.cs:line 34
   at GloboTicket.TicketManagement.Api.Controllers.EventsController.Create(CreateEventCommand createEventCommand) in E:\Beck\Projects\.Net\GloboTicket\GloboTicket.TicketManagement\GloboTicket.TicketManagement.Api\Controllers\EventsController.cs:line 44
   at lambda_method357(Closure, Object)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
2023-04-19 15:50:33.410 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7020/api/Events application/json 340 - 400 - application/json 42664.2660ms
2023-04-19 15:50:44.872 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7020/api/Events - -
2023-04-19 15:50:44.873 +03:00 [INF] CORS policy execution successful.
2023-04-19 15:50:44.875 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7020/api/Events - - - 204 - - 3.6857ms
2023-04-19 15:50:44.877 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7020/api/Events application/json 340
2023-04-19 15:50:44.878 +03:00 [INF] CORS policy execution successful.
2023-04-19 15:50:44.878 +03:00 [INF] Executing endpoint 'GloboTicket.TicketManagement.Api.Controllers.EventsController.Create (GloboTicket.TicketManagement.Api)'
2023-04-19 15:50:44.879 +03:00 [INF] Route matched with {action = "Create", controller = "Events"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Guid]] Create(GloboTicket.TicketManagement.Application.Features.Events.Commands.CreateEvent.CreateEventCommand) on controller GloboTicket.TicketManagement.Api.Controllers.EventsController (GloboTicket.TicketManagement.Api).
2023-04-19 15:50:44.898 +03:00 [INF] Executing action method GloboTicket.TicketManagement.Api.Controllers.EventsController.Create (GloboTicket.TicketManagement.Api) - Validation state: "Valid"
2023-04-19 15:51:28.598 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7020/api/Events - -
2023-04-19 15:51:29.469 +03:00 [INF] CORS policy execution successful.
2023-04-19 15:51:30.473 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7020/api/Events - - - 204 - - 1874.8338ms
2023-04-19 15:51:30.480 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/api/Events - -
2023-04-19 15:51:30.485 +03:00 [INF] Executed action GloboTicket.TicketManagement.Api.Controllers.EventsController.Create (GloboTicket.TicketManagement.Api) in 45604.9701ms
2023-04-19 15:51:30.485 +03:00 [INF] CORS policy execution successful.
2023-04-19 15:51:30.486 +03:00 [INF] Executed endpoint 'GloboTicket.TicketManagement.Api.Controllers.EventsController.Create (GloboTicket.TicketManagement.Api)'
2023-04-19 15:51:30.486 +03:00 [INF] Executing endpoint 'GloboTicket.TicketManagement.Api.Controllers.EventsController.GetAllEvents (GloboTicket.TicketManagement.Api)'
2023-04-19 15:51:30.487 +03:00 [ERR] HTTP POST /api/Events responded 500 in 45608.9073 ms
System.NullReferenceException: Object reference not set to an instance of an object.
   at GloboTicket.TicketManagement.Application.Features.Events.Commands.CreateEvent.CreateEventCommandValidator.EventNameAndDateUnique(CreateEventCommand e, CancellationToken cancellationToken) in E:\Beck\Projects\.Net\GloboTicket\GloboTicket.TicketManagement\GloboTicket.TicketManagement.Application\Features\Events\Commands\CreateEvent\CreateEventCommandValidator.cs:line 32
   at FluentValidation.Internal.RuleComponent`2.ValidateAsync(ValidationContext`1 context, TProperty value, Boolean useAsync, CancellationToken cancellation) in /_/src/FluentValidation/Internal/RuleComponent.cs:line 71
   at FluentValidation.Internal.PropertyRule`2.ValidateAsync(ValidationContext`1 context, Boolean useAsync, CancellationToken cancellation) in /_/src/FluentValidation/Internal/PropertyRule.cs:line 143
   at FluentValidation.AbstractValidator`1.ValidateInternalAsync(ValidationContext`1 context, Boolean useAsync, CancellationToken cancellation) in /_/src/FluentValidation/AbstractValidator.cs:line 241
   at FluentValidation.AbstractValidator`1.ValidateAsync(ValidationContext`1 context, CancellationToken cancellation) in /_/src/FluentValidation/AbstractValidator.cs:line 220
   at GloboTicket.TicketManagement.Application.Features.Events.Commands.CreateEvent.CreateEventCommandHadler.Handle(CreateEventCommand request, CancellationToken cancellationToken) in E:\Beck\Projects\.Net\GloboTicket\GloboTicket.TicketManagement\GloboTicket.TicketManagement.Application\Features\Events\Commands\CreateEvent\CreateEventCommandHadler.cs:line 34
   at GloboTicket.TicketManagement.Api.Controllers.EventsController.Create(CreateEventCommand createEventCommand) in E:\Beck\Projects\.Net\GloboTicket\GloboTicket.TicketManagement\GloboTicket.TicketManagement.Api\Controllers\EventsController.cs:line 44
   at lambda_method357(Closure, Object)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
2023-04-19 15:51:30.488 +03:00 [INF] Route matched with {action = "GetAllEvents", controller = "Events"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[GloboTicket.TicketManagement.Application.Features.Events.Queries.GetEventsList.EventListVm]]] GetAllEvents() on controller GloboTicket.TicketManagement.Api.Controllers.EventsController (GloboTicket.TicketManagement.Api).
2023-04-19 15:51:31.391 +03:00 [INF] Executing action method GloboTicket.TicketManagement.Api.Controllers.EventsController.GetAllEvents (GloboTicket.TicketManagement.Api) - Validation state: "Valid"
2023-04-19 15:51:32.018 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7020/api/Events application/json 340 - 400 - application/json 47141.2406ms
2023-04-19 15:51:32.026 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[EventId], [e].[Artist], [e].[CategoryId], [e].[CreatedBy], [e].[CreatedDate], [e].[Date], [e].[Description], [e].[ImageUrl], [e].[LastModifiedBy], [e].[LastModifiedDate], [e].[Name], [e].[Price]
FROM [Events] AS [e]
2023-04-19 15:51:32.031 +03:00 [INF] Executed action method GloboTicket.TicketManagement.Api.Controllers.EventsController.GetAllEvents (GloboTicket.TicketManagement.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 11.8138ms.
2023-04-19 15:51:32.034 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GloboTicket.TicketManagement.Application.Features.Events.Queries.GetEventsList.EventListVm, GloboTicket.TicketManagement.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-04-19 15:51:32.035 +03:00 [INF] Executed action GloboTicket.TicketManagement.Api.Controllers.EventsController.GetAllEvents (GloboTicket.TicketManagement.Api) in 1540.8474ms
2023-04-19 15:51:32.036 +03:00 [INF] Executed endpoint 'GloboTicket.TicketManagement.Api.Controllers.EventsController.GetAllEvents (GloboTicket.TicketManagement.Api)'
2023-04-19 15:51:32.038 +03:00 [INF] HTTP GET /api/Events responded 200 in 1551.2494 ms
2023-04-19 15:51:32.041 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/api/Events - - - 200 - application/json;+charset=utf-8 1560.3903ms
2023-04-19 15:52:02.366 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7020/api/Category/allwithevents?includeHistory=false - -
2023-04-19 15:52:02.380 +03:00 [INF] CORS policy execution successful.
2023-04-19 15:52:02.382 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7020/api/Category/allwithevents?includeHistory=false - - - 204 - - 16.0946ms
2023-04-19 15:52:02.384 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/api/Category/allwithevents?includeHistory=false - -
2023-04-19 15:52:02.387 +03:00 [INF] CORS policy execution successful.
2023-04-19 15:52:02.388 +03:00 [INF] Executing endpoint 'GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetCategoriesWithEvents (GloboTicket.TicketManagement.Api)'
2023-04-19 15:52:02.398 +03:00 [INF] Route matched with {action = "GetCategoriesWithEvents", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[GloboTicket.TicketManagement.Application.Features.Categories.Queries.GetCategoriesListWithEvents.CategoryEventListVm]]] GetCategoriesWithEvents(Boolean) on controller GloboTicket.TicketManagement.Api.Controllers.CategoryController (GloboTicket.TicketManagement.Api).
2023-04-19 15:52:02.429 +03:00 [INF] Executing action method GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetCategoriesWithEvents (GloboTicket.TicketManagement.Api) - Validation state: "Valid"
2023-04-19 15:52:04.197 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[CategoryId], [c].[CreatedBy], [c].[CreatedDate], [c].[LastModifiedBy], [c].[LastModifiedDate], [c].[Name], [e].[EventId], [e].[Artist], [e].[CategoryId], [e].[CreatedBy], [e].[CreatedDate], [e].[Date], [e].[Description], [e].[ImageUrl], [e].[LastModifiedBy], [e].[LastModifiedDate], [e].[Name], [e].[Price]
FROM [Categories] AS [c]
LEFT JOIN [Events] AS [e] ON [c].[CategoryId] = [e].[CategoryId]
ORDER BY [c].[CategoryId]
2023-04-19 15:52:04.215 +03:00 [INF] Executed action method GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetCategoriesWithEvents (GloboTicket.TicketManagement.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1784.0827ms.
2023-04-19 15:52:04.217 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GloboTicket.TicketManagement.Application.Features.Categories.Queries.GetCategoriesListWithEvents.CategoryEventListVm, GloboTicket.TicketManagement.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-04-19 15:52:04.223 +03:00 [INF] Executed action GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetCategoriesWithEvents (GloboTicket.TicketManagement.Api) in 1822.8403ms
2023-04-19 15:52:04.225 +03:00 [INF] Executed endpoint 'GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetCategoriesWithEvents (GloboTicket.TicketManagement.Api)'
2023-04-19 15:52:04.228 +03:00 [INF] HTTP GET /api/Category/allwithevents responded 200 in 1839.4252 ms
2023-04-19 15:52:04.229 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/api/Category/allwithevents?includeHistory=false - - - 200 - application/json;+charset=utf-8 1845.1579ms
2023-04-19 15:52:43.039 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7020/api/Events - -
2023-04-19 15:52:43.055 +03:00 [INF] CORS policy execution successful.
2023-04-19 15:52:43.058 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7020/api/Events - - - 204 - - 19.4794ms
2023-04-19 15:52:43.060 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/api/Events - -
2023-04-19 15:52:43.063 +03:00 [INF] CORS policy execution successful.
2023-04-19 15:52:43.064 +03:00 [INF] Executing endpoint 'GloboTicket.TicketManagement.Api.Controllers.EventsController.GetAllEvents (GloboTicket.TicketManagement.Api)'
2023-04-19 15:52:43.066 +03:00 [INF] Route matched with {action = "GetAllEvents", controller = "Events"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[GloboTicket.TicketManagement.Application.Features.Events.Queries.GetEventsList.EventListVm]]] GetAllEvents() on controller GloboTicket.TicketManagement.Api.Controllers.EventsController (GloboTicket.TicketManagement.Api).
2023-04-19 15:52:43.089 +03:00 [INF] Executing action method GloboTicket.TicketManagement.Api.Controllers.EventsController.GetAllEvents (GloboTicket.TicketManagement.Api) - Validation state: "Valid"
2023-04-19 15:52:43.094 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[EventId], [e].[Artist], [e].[CategoryId], [e].[CreatedBy], [e].[CreatedDate], [e].[Date], [e].[Description], [e].[ImageUrl], [e].[LastModifiedBy], [e].[LastModifiedDate], [e].[Name], [e].[Price]
FROM [Events] AS [e]
2023-04-19 15:52:43.095 +03:00 [INF] Executed action method GloboTicket.TicketManagement.Api.Controllers.EventsController.GetAllEvents (GloboTicket.TicketManagement.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 4.6373ms.
2023-04-19 15:52:43.096 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GloboTicket.TicketManagement.Application.Features.Events.Queries.GetEventsList.EventListVm, GloboTicket.TicketManagement.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-04-19 15:52:43.097 +03:00 [INF] Executed action GloboTicket.TicketManagement.Api.Controllers.EventsController.GetAllEvents (GloboTicket.TicketManagement.Api) in 26.8358ms
2023-04-19 15:52:43.099 +03:00 [INF] Executed endpoint 'GloboTicket.TicketManagement.Api.Controllers.EventsController.GetAllEvents (GloboTicket.TicketManagement.Api)'
2023-04-19 15:52:43.100 +03:00 [INF] HTTP GET /api/Events responded 200 in 36.0754 ms
2023-04-19 15:52:43.103 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/api/Events - - - 200 - application/json;+charset=utf-8 42.6566ms
2023-04-19 15:52:44.183 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7020/api/Category/all - -
2023-04-19 15:52:44.185 +03:00 [INF] CORS policy execution successful.
2023-04-19 15:52:44.187 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7020/api/Category/all - - - 204 - - 4.2650ms
2023-04-19 15:52:44.189 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/api/Category/all - -
2023-04-19 15:52:44.191 +03:00 [INF] CORS policy execution successful.
2023-04-19 15:52:44.193 +03:00 [INF] Executing endpoint 'GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetAllCategories (GloboTicket.TicketManagement.Api)'
2023-04-19 15:52:44.196 +03:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[GloboTicket.TicketManagement.Application.Features.Categories.Queries.GetCategoriesList.CategoryListVm]]] GetAllCategories() on controller GloboTicket.TicketManagement.Api.Controllers.CategoryController (GloboTicket.TicketManagement.Api).
2023-04-19 15:52:44.215 +03:00 [INF] Executing action method GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetAllCategories (GloboTicket.TicketManagement.Api) - Validation state: "Valid"
2023-04-19 15:52:44.222 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[CategoryId], [c].[CreatedBy], [c].[CreatedDate], [c].[LastModifiedBy], [c].[LastModifiedDate], [c].[Name]
FROM [Categories] AS [c]
2023-04-19 15:52:44.224 +03:00 [INF] Executed action method GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetAllCategories (GloboTicket.TicketManagement.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 6.5317ms.
2023-04-19 15:52:44.225 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GloboTicket.TicketManagement.Application.Features.Categories.Queries.GetCategoriesList.CategoryListVm, GloboTicket.TicketManagement.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-04-19 15:52:44.226 +03:00 [INF] Executed action GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetAllCategories (GloboTicket.TicketManagement.Api) in 27.905ms
2023-04-19 15:52:44.228 +03:00 [INF] Executed endpoint 'GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetAllCategories (GloboTicket.TicketManagement.Api)'
2023-04-19 15:52:44.229 +03:00 [INF] HTTP GET /api/Category/all responded 200 in 36.3278 ms
2023-04-19 15:52:44.230 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/api/Category/all - - - 200 - application/json;+charset=utf-8 40.6338ms
2023-04-19 15:54:12.475 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7020/api/Events - -
2023-04-19 15:54:12.483 +03:00 [INF] CORS policy execution successful.
2023-04-19 15:54:12.488 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7020/api/Events - - - 204 - - 13.0919ms
2023-04-19 15:54:12.490 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7020/api/Events application/json 340
2023-04-19 15:54:12.492 +03:00 [INF] CORS policy execution successful.
2023-04-19 15:54:12.493 +03:00 [INF] Executing endpoint 'GloboTicket.TicketManagement.Api.Controllers.EventsController.Create (GloboTicket.TicketManagement.Api)'
2023-04-19 15:54:12.494 +03:00 [INF] Route matched with {action = "Create", controller = "Events"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Guid]] Create(GloboTicket.TicketManagement.Application.Features.Events.Commands.CreateEvent.CreateEventCommand) on controller GloboTicket.TicketManagement.Api.Controllers.EventsController (GloboTicket.TicketManagement.Api).
2023-04-19 15:54:12.515 +03:00 [INF] Executing action method GloboTicket.TicketManagement.Api.Controllers.EventsController.Create (GloboTicket.TicketManagement.Api) - Validation state: "Valid"
2023-04-19 15:55:44.342 +03:00 [INF] Executed action GloboTicket.TicketManagement.Api.Controllers.EventsController.Create (GloboTicket.TicketManagement.Api) in 91845.9615ms
2023-04-19 15:55:44.345 +03:00 [INF] Executed endpoint 'GloboTicket.TicketManagement.Api.Controllers.EventsController.Create (GloboTicket.TicketManagement.Api)'
2023-04-19 15:55:44.345 +03:00 [ERR] HTTP POST /api/Events responded 500 in 91852.3160 ms
System.NullReferenceException: Object reference not set to an instance of an object.
   at GloboTicket.TicketManagement.Application.Features.Events.Commands.CreateEvent.CreateEventCommandHadler.Handle(CreateEventCommand request, CancellationToken cancellationToken)
   at GloboTicket.TicketManagement.Api.Controllers.EventsController.Create(CreateEventCommand createEventCommand) in E:\Beck\Projects\.Net\GloboTicket\GloboTicket.TicketManagement\GloboTicket.TicketManagement.Api\Controllers\EventsController.cs:line 44
   at lambda_method357(Closure, Object)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
2023-04-19 15:55:45.810 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7020/api/Events application/json 340 - 400 - application/json 93320.2730ms
2023-04-19 15:55:49.239 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7020/api/Events - -
2023-04-19 15:55:49.241 +03:00 [INF] CORS policy execution successful.
2023-04-19 15:55:49.242 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7020/api/Events - - - 204 - - 3.3226ms
2023-04-19 15:55:49.244 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7020/api/Events application/json 340
2023-04-19 15:55:49.246 +03:00 [INF] CORS policy execution successful.
2023-04-19 15:55:49.247 +03:00 [INF] Executing endpoint 'GloboTicket.TicketManagement.Api.Controllers.EventsController.Create (GloboTicket.TicketManagement.Api)'
2023-04-19 15:55:49.251 +03:00 [INF] Route matched with {action = "Create", controller = "Events"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Guid]] Create(GloboTicket.TicketManagement.Application.Features.Events.Commands.CreateEvent.CreateEventCommand) on controller GloboTicket.TicketManagement.Api.Controllers.EventsController (GloboTicket.TicketManagement.Api).
2023-04-19 15:55:49.287 +03:00 [INF] Executing action method GloboTicket.TicketManagement.Api.Controllers.EventsController.Create (GloboTicket.TicketManagement.Api) - Validation state: "Valid"
2023-04-19 15:56:04.707 +03:00 [INF] Executed action GloboTicket.TicketManagement.Api.Controllers.EventsController.Create (GloboTicket.TicketManagement.Api) in 15455.023ms
2023-04-19 15:56:04.713 +03:00 [INF] Executed endpoint 'GloboTicket.TicketManagement.Api.Controllers.EventsController.Create (GloboTicket.TicketManagement.Api)'
2023-04-19 15:56:04.716 +03:00 [ERR] HTTP POST /api/Events responded 500 in 15468.3421 ms
System.NullReferenceException: Object reference not set to an instance of an object.
   at GloboTicket.TicketManagement.Application.Features.Events.Commands.CreateEvent.CreateEventCommandValidator.EventNameAndDateUnique(CreateEventCommand e, CancellationToken cancellationToken)
   at FluentValidation.Internal.RuleComponent`2.ValidateAsync(ValidationContext`1 context, TProperty value, Boolean useAsync, CancellationToken cancellation) in /_/src/FluentValidation/Internal/RuleComponent.cs:line 71
   at FluentValidation.Internal.PropertyRule`2.ValidateAsync(ValidationContext`1 context, Boolean useAsync, CancellationToken cancellation) in /_/src/FluentValidation/Internal/PropertyRule.cs:line 143
   at FluentValidation.AbstractValidator`1.ValidateInternalAsync(ValidationContext`1 context, Boolean useAsync, CancellationToken cancellation) in /_/src/FluentValidation/AbstractValidator.cs:line 241
   at FluentValidation.AbstractValidator`1.ValidateAsync(ValidationContext`1 context, CancellationToken cancellation) in /_/src/FluentValidation/AbstractValidator.cs:line 220
   at GloboTicket.TicketManagement.Application.Features.Events.Commands.CreateEvent.CreateEventCommandHadler.Handle(CreateEventCommand request, CancellationToken cancellationToken)
   at GloboTicket.TicketManagement.Api.Controllers.EventsController.Create(CreateEventCommand createEventCommand) in E:\Beck\Projects\.Net\GloboTicket\GloboTicket.TicketManagement\GloboTicket.TicketManagement.Api\Controllers\EventsController.cs:line 44
   at lambda_method391(Closure, Object)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
2023-04-19 15:56:06.321 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7020/api/Events application/json 340 - 400 - application/json 17077.3544ms
2023-04-19 15:56:08.987 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7020/api/Events - -
2023-04-19 15:56:08.989 +03:00 [INF] CORS policy execution successful.
2023-04-19 15:56:08.990 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7020/api/Events - - - 204 - - 2.4442ms
2023-04-19 15:56:08.991 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7020/api/Events application/json 340
2023-04-19 15:56:08.992 +03:00 [INF] CORS policy execution successful.
2023-04-19 15:56:08.992 +03:00 [INF] Executing endpoint 'GloboTicket.TicketManagement.Api.Controllers.EventsController.Create (GloboTicket.TicketManagement.Api)'
2023-04-19 15:56:08.993 +03:00 [INF] Route matched with {action = "Create", controller = "Events"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Guid]] Create(GloboTicket.TicketManagement.Application.Features.Events.Commands.CreateEvent.CreateEventCommand) on controller GloboTicket.TicketManagement.Api.Controllers.EventsController (GloboTicket.TicketManagement.Api).
2023-04-19 15:56:09.008 +03:00 [INF] Executing action method GloboTicket.TicketManagement.Api.Controllers.EventsController.Create (GloboTicket.TicketManagement.Api) - Validation state: "Valid"
2023-04-19 15:56:57.913 +03:00 [INF] Executed action GloboTicket.TicketManagement.Api.Controllers.EventsController.Create (GloboTicket.TicketManagement.Api) in 48919.2144ms
2023-04-19 15:56:57.915 +03:00 [INF] Executed endpoint 'GloboTicket.TicketManagement.Api.Controllers.EventsController.Create (GloboTicket.TicketManagement.Api)'
2023-04-19 15:56:57.916 +03:00 [ERR] HTTP POST /api/Events responded 500 in 48923.8383 ms
System.NullReferenceException: Object reference not set to an instance of an object.
   at GloboTicket.TicketManagement.Application.Features.Events.Commands.CreateEvent.CreateEventCommandValidator.EventNameAndDateUnique(CreateEventCommand e, CancellationToken cancellationToken)
   at FluentValidation.Internal.RuleComponent`2.ValidateAsync(ValidationContext`1 context, TProperty value, Boolean useAsync, CancellationToken cancellation) in /_/src/FluentValidation/Internal/RuleComponent.cs:line 71
   at FluentValidation.Internal.PropertyRule`2.ValidateAsync(ValidationContext`1 context, Boolean useAsync, CancellationToken cancellation) in /_/src/FluentValidation/Internal/PropertyRule.cs:line 143
   at FluentValidation.AbstractValidator`1.ValidateInternalAsync(ValidationContext`1 context, Boolean useAsync, CancellationToken cancellation) in /_/src/FluentValidation/AbstractValidator.cs:line 241
   at FluentValidation.AbstractValidator`1.ValidateAsync(ValidationContext`1 context, CancellationToken cancellation) in /_/src/FluentValidation/AbstractValidator.cs:line 220
   at GloboTicket.TicketManagement.Application.Features.Events.Commands.CreateEvent.CreateEventCommandHadler.Handle(CreateEventCommand request, CancellationToken cancellationToken)
   at GloboTicket.TicketManagement.Api.Controllers.EventsController.Create(CreateEventCommand createEventCommand) in E:\Beck\Projects\.Net\GloboTicket\GloboTicket.TicketManagement\GloboTicket.TicketManagement.Api\Controllers\EventsController.cs:line 44
   at lambda_method391(Closure, Object)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
2023-04-19 15:56:59.296 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7020/api/Events application/json 340 - 400 - application/json 50305.5512ms
2023-04-19 15:57:01.503 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7020/api/Events - -
2023-04-19 15:57:01.504 +03:00 [INF] CORS policy execution successful.
2023-04-19 15:57:01.505 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7020/api/Events - - - 204 - - 2.1599ms
2023-04-19 15:57:01.506 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7020/api/Events application/json 340
2023-04-19 15:57:01.507 +03:00 [INF] CORS policy execution successful.
2023-04-19 15:57:01.508 +03:00 [INF] Executing endpoint 'GloboTicket.TicketManagement.Api.Controllers.EventsController.Create (GloboTicket.TicketManagement.Api)'
2023-04-19 15:57:01.508 +03:00 [INF] Route matched with {action = "Create", controller = "Events"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Guid]] Create(GloboTicket.TicketManagement.Application.Features.Events.Commands.CreateEvent.CreateEventCommand) on controller GloboTicket.TicketManagement.Api.Controllers.EventsController (GloboTicket.TicketManagement.Api).
2023-04-19 15:57:01.529 +03:00 [INF] Executing action method GloboTicket.TicketManagement.Api.Controllers.EventsController.Create (GloboTicket.TicketManagement.Api) - Validation state: "Valid"
2023-04-19 15:58:57.858 +03:00 [INF] Executed action GloboTicket.TicketManagement.Api.Controllers.EventsController.Create (GloboTicket.TicketManagement.Api) in 116348.5528ms
2023-04-19 15:58:57.859 +03:00 [INF] Executed endpoint 'GloboTicket.TicketManagement.Api.Controllers.EventsController.Create (GloboTicket.TicketManagement.Api)'
2023-04-19 15:58:57.860 +03:00 [ERR] HTTP POST /api/Events responded 500 in 116352.5411 ms
System.NullReferenceException: Object reference not set to an instance of an object.
   at GloboTicket.TicketManagement.Application.Features.Events.Commands.CreateEvent.CreateEventCommandValidator.EventNameAndDateUnique(CreateEventCommand e, CancellationToken cancellationToken)
   at FluentValidation.Internal.RuleComponent`2.ValidateAsync(ValidationContext`1 context, TProperty value, Boolean useAsync, CancellationToken cancellation) in /_/src/FluentValidation/Internal/RuleComponent.cs:line 71
   at FluentValidation.Internal.PropertyRule`2.ValidateAsync(ValidationContext`1 context, Boolean useAsync, CancellationToken cancellation) in /_/src/FluentValidation/Internal/PropertyRule.cs:line 143
   at FluentValidation.AbstractValidator`1.ValidateInternalAsync(ValidationContext`1 context, Boolean useAsync, CancellationToken cancellation) in /_/src/FluentValidation/AbstractValidator.cs:line 241
   at FluentValidation.AbstractValidator`1.ValidateAsync(ValidationContext`1 context, CancellationToken cancellation) in /_/src/FluentValidation/AbstractValidator.cs:line 220
   at GloboTicket.TicketManagement.Application.Features.Events.Commands.CreateEvent.CreateEventCommandHadler.Handle(CreateEventCommand request, CancellationToken cancellationToken)
   at GloboTicket.TicketManagement.Api.Controllers.EventsController.Create(CreateEventCommand createEventCommand) in E:\Beck\Projects\.Net\GloboTicket\GloboTicket.TicketManagement\GloboTicket.TicketManagement.Api\Controllers\EventsController.cs:line 44
   at lambda_method391(Closure, Object)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
2023-04-19 15:58:59.277 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7020/api/Events application/json 340 - 400 - application/json 117770.1807ms
2023-04-19 15:59:29.298 +03:00 [INF] User profile is available. Using 'C:\Users\abiruk\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-04-19 15:59:29.551 +03:00 [WRN] The ASP.NET Core developer certificate is not trusted. For information about trusting the ASP.NET Core developer certificate, see https://aka.ms/aspnet/https-trust-dev-cert.
2023-04-19 15:59:29.600 +03:00 [INF] Now listening on: https://localhost:7020
2023-04-19 15:59:29.601 +03:00 [INF] Now listening on: http://localhost:5020
2023-04-19 15:59:29.628 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2023-04-19 15:59:29.630 +03:00 [INF] Hosting environment: Development
2023-04-19 15:59:29.631 +03:00 [INF] Content root path: E:\Beck\Projects\.Net\GloboTicket\GloboTicket.TicketManagement\GloboTicket.TicketManagement.Api
2023-04-19 15:59:29.861 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/swagger - -
2023-04-19 15:59:29.916 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/swagger - - - 301 0 - 57.0940ms
2023-04-19 15:59:29.939 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/swagger/index.html - -
2023-04-19 15:59:30.186 +03:00 [WRN] Unable to configure browser refresh script injection on the response. Consider manually adding '<script src="/_framework/aspnetcore-browser-refresh.js"></script>' to the body of the page.
2023-04-19 15:59:30.190 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/swagger/index.html - - - 200 - text/html;charset=utf-8 251.1770ms
2023-04-19 15:59:30.212 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/swagger/swagger-ui.css - -
2023-04-19 15:59:30.226 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/_vs/browserLink - -
2023-04-19 15:59:30.226 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/swagger/swagger-ui-bundle.js - -
2023-04-19 15:59:30.226 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/swagger/swagger-ui-standalone-preset.js - -
2023-04-19 15:59:30.248 +03:00 [INF] Sending file. Request path: '/swagger-ui.css'. Physical path: 'N/A'
2023-04-19 15:59:30.251 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/swagger/swagger-ui.css - - - 200 143943 text/css 39.0198ms
2023-04-19 15:59:30.257 +03:00 [INF] Sending file. Request path: '/swagger-ui-standalone-preset.js'. Physical path: 'N/A'
2023-04-19 15:59:30.261 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/swagger/swagger-ui-standalone-preset.js - - - 200 339486 text/javascript 35.5036ms
2023-04-19 15:59:30.272 +03:00 [INF] Sending file. Request path: '/swagger-ui-bundle.js'. Physical path: 'N/A'
2023-04-19 15:59:30.275 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/swagger/swagger-ui-bundle.js - - - 200 1096145 text/javascript 49.3502ms
2023-04-19 15:59:30.301 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 75.1047ms
2023-04-19 15:59:30.528 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/swagger/v1/swagger.json - -
2023-04-19 15:59:30.562 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/swagger/favicon-32x32.png - -
2023-04-19 15:59:30.564 +03:00 [INF] Sending file. Request path: '/favicon-32x32.png'. Physical path: 'N/A'
2023-04-19 15:59:30.567 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/swagger/favicon-32x32.png - - - 200 628 image/png 4.4475ms
2023-04-19 15:59:30.721 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 193.7443ms
2023-04-19 15:59:48.174 +03:00 [INF] User profile is available. Using 'C:\Users\abiruk\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-04-19 15:59:48.574 +03:00 [WRN] The ASP.NET Core developer certificate is not trusted. For information about trusting the ASP.NET Core developer certificate, see https://aka.ms/aspnet/https-trust-dev-cert.
2023-04-19 15:59:48.649 +03:00 [INF] Now listening on: https://localhost:7020
2023-04-19 15:59:48.651 +03:00 [INF] Now listening on: http://localhost:5020
2023-04-19 15:59:48.654 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2023-04-19 15:59:48.656 +03:00 [INF] Hosting environment: Development
2023-04-19 15:59:48.657 +03:00 [INF] Content root path: E:\Beck\Projects\.Net\GloboTicket\GloboTicket.TicketManagement\GloboTicket.TicketManagement.Api
2023-04-19 15:59:49.234 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/swagger - -
2023-04-19 15:59:49.356 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/swagger - - - 301 0 - 126.7730ms
2023-04-19 15:59:49.386 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/swagger/index.html - -
2023-04-19 15:59:49.621 +03:00 [WRN] Unable to configure browser refresh script injection on the response. Consider manually adding '<script src="/_framework/aspnetcore-browser-refresh.js"></script>' to the body of the page.
2023-04-19 15:59:49.623 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/swagger/index.html - - - 200 - text/html;charset=utf-8 237.7687ms
2023-04-19 15:59:49.630 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/swagger/swagger-ui.css - -
2023-04-19 15:59:49.630 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/swagger/swagger-ui-standalone-preset.js - -
2023-04-19 15:59:49.630 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/swagger/swagger-ui-bundle.js - -
2023-04-19 15:59:49.639 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/_vs/browserLink - -
2023-04-19 15:59:49.708 +03:00 [INF] Sending file. Request path: '/swagger-ui-standalone-preset.js'. Physical path: 'N/A'
2023-04-19 15:59:49.708 +03:00 [INF] Sending file. Request path: '/swagger-ui.css'. Physical path: 'N/A'
2023-04-19 15:59:49.711 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/swagger/swagger-ui-standalone-preset.js - - - 200 339486 text/javascript 80.4596ms
2023-04-19 15:59:49.713 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/swagger/swagger-ui.css - - - 200 143943 text/css 82.9956ms
2023-04-19 15:59:49.720 +03:00 [INF] Sending file. Request path: '/swagger-ui-bundle.js'. Physical path: 'N/A'
2023-04-19 15:59:49.725 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/swagger/swagger-ui-bundle.js - - - 200 1096145 text/javascript 94.9193ms
2023-04-19 15:59:49.746 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 106.1232ms
2023-04-19 15:59:49.998 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/swagger/v1/swagger.json - -
2023-04-19 15:59:50.050 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/swagger/favicon-32x32.png - -
2023-04-19 15:59:50.053 +03:00 [INF] Sending file. Request path: '/favicon-32x32.png'. Physical path: 'N/A'
2023-04-19 15:59:50.055 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/swagger/favicon-32x32.png - - - 200 628 image/png 5.2841ms
2023-04-19 15:59:50.220 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 222.0230ms
2023-04-19 15:59:56.335 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7020/api/Events - -
2023-04-19 15:59:56.462 +03:00 [INF] CORS policy execution successful.
2023-04-19 15:59:56.465 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7020/api/Events - - - 204 - - 129.2202ms
2023-04-19 15:59:56.467 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/api/Events - -
2023-04-19 15:59:56.706 +03:00 [INF] CORS policy execution successful.
2023-04-19 15:59:56.713 +03:00 [INF] Executing endpoint 'GloboTicket.TicketManagement.Api.Controllers.EventsController.GetAllEvents (GloboTicket.TicketManagement.Api)'
2023-04-19 15:59:56.739 +03:00 [INF] Route matched with {action = "GetAllEvents", controller = "Events"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[GloboTicket.TicketManagement.Application.Features.Events.Queries.GetEventsList.EventListVm]]] GetAllEvents() on controller GloboTicket.TicketManagement.Api.Controllers.EventsController (GloboTicket.TicketManagement.Api).
2023-04-19 15:59:56.853 +03:00 [INF] Executing action method GloboTicket.TicketManagement.Api.Controllers.EventsController.GetAllEvents (GloboTicket.TicketManagement.Api) - Validation state: "Valid"
2023-04-19 15:59:58.758 +03:00 [INF] Executed DbCommand (42ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[EventId], [e].[Artist], [e].[CategoryId], [e].[CreatedBy], [e].[CreatedDate], [e].[Date], [e].[Description], [e].[ImageUrl], [e].[LastModifiedBy], [e].[LastModifiedDate], [e].[Name], [e].[Price]
FROM [Events] AS [e]
2023-04-19 15:59:58.898 +03:00 [INF] Executed action method GloboTicket.TicketManagement.Api.Controllers.EventsController.GetAllEvents (GloboTicket.TicketManagement.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 2038.048ms.
2023-04-19 15:59:58.908 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GloboTicket.TicketManagement.Application.Features.Events.Queries.GetEventsList.EventListVm, GloboTicket.TicketManagement.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-04-19 15:59:58.941 +03:00 [INF] Executed action GloboTicket.TicketManagement.Api.Controllers.EventsController.GetAllEvents (GloboTicket.TicketManagement.Api) in 2193.9838ms
2023-04-19 15:59:58.943 +03:00 [INF] Executed endpoint 'GloboTicket.TicketManagement.Api.Controllers.EventsController.GetAllEvents (GloboTicket.TicketManagement.Api)'
2023-04-19 15:59:58.947 +03:00 [INF] HTTP GET /api/Events responded 200 in 2234.6742 ms
2023-04-19 15:59:58.958 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/api/Events - - - 200 - application/json;+charset=utf-8 2491.1314ms
2023-04-19 16:00:03.509 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7020/api/Category/all - -
2023-04-19 16:00:03.512 +03:00 [INF] CORS policy execution successful.
2023-04-19 16:00:03.513 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7020/api/Category/all - - - 204 - - 4.1916ms
2023-04-19 16:00:03.515 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/api/Category/all - -
2023-04-19 16:00:03.519 +03:00 [INF] CORS policy execution successful.
2023-04-19 16:00:03.527 +03:00 [INF] Executing endpoint 'GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetAllCategories (GloboTicket.TicketManagement.Api)'
2023-04-19 16:00:03.531 +03:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[GloboTicket.TicketManagement.Application.Features.Categories.Queries.GetCategoriesList.CategoryListVm]]] GetAllCategories() on controller GloboTicket.TicketManagement.Api.Controllers.CategoryController (GloboTicket.TicketManagement.Api).
2023-04-19 16:00:03.558 +03:00 [INF] Executing action method GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetAllCategories (GloboTicket.TicketManagement.Api) - Validation state: "Valid"
2023-04-19 16:00:03.641 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[CategoryId], [c].[CreatedBy], [c].[CreatedDate], [c].[LastModifiedBy], [c].[LastModifiedDate], [c].[Name]
FROM [Categories] AS [c]
2023-04-19 16:00:03.663 +03:00 [INF] Executed action method GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetAllCategories (GloboTicket.TicketManagement.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 103.4181ms.
2023-04-19 16:00:03.665 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GloboTicket.TicketManagement.Application.Features.Categories.Queries.GetCategoriesList.CategoryListVm, GloboTicket.TicketManagement.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-04-19 16:00:03.668 +03:00 [INF] Executed action GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetAllCategories (GloboTicket.TicketManagement.Api) in 134.4221ms
2023-04-19 16:00:03.671 +03:00 [INF] Executed endpoint 'GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetAllCategories (GloboTicket.TicketManagement.Api)'
2023-04-19 16:00:03.673 +03:00 [INF] HTTP GET /api/Category/all responded 200 in 145.9694 ms
2023-04-19 16:00:03.675 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/api/Category/all - - - 200 - application/json;+charset=utf-8 160.4595ms
2023-04-19 16:00:53.592 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7020/api/Events - -
2023-04-19 16:00:53.594 +03:00 [INF] CORS policy execution successful.
2023-04-19 16:00:53.595 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7020/api/Events - - - 204 - - 2.1790ms
2023-04-19 16:00:53.596 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7020/api/Events application/json 340
2023-04-19 16:00:53.598 +03:00 [INF] CORS policy execution successful.
2023-04-19 16:00:53.598 +03:00 [INF] Executing endpoint 'GloboTicket.TicketManagement.Api.Controllers.EventsController.Create (GloboTicket.TicketManagement.Api)'
2023-04-19 16:00:53.608 +03:00 [INF] Route matched with {action = "Create", controller = "Events"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Guid]] Create(GloboTicket.TicketManagement.Application.Features.Events.Commands.CreateEvent.CreateEventCommand) on controller GloboTicket.TicketManagement.Api.Controllers.EventsController (GloboTicket.TicketManagement.Api).
2023-04-19 16:00:53.666 +03:00 [INF] Executing action method GloboTicket.TicketManagement.Api.Controllers.EventsController.Create (GloboTicket.TicketManagement.Api) - Validation state: "Valid"
2023-04-19 16:06:08.689 +03:00 [INF] User profile is available. Using 'C:\Users\abiruk\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-04-19 16:06:08.975 +03:00 [WRN] The ASP.NET Core developer certificate is not trusted. For information about trusting the ASP.NET Core developer certificate, see https://aka.ms/aspnet/https-trust-dev-cert.
2023-04-19 16:06:09.022 +03:00 [INF] Now listening on: https://localhost:7020
2023-04-19 16:06:09.024 +03:00 [INF] Now listening on: http://localhost:5020
2023-04-19 16:06:09.028 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2023-04-19 16:06:09.030 +03:00 [INF] Hosting environment: Development
2023-04-19 16:06:09.031 +03:00 [INF] Content root path: E:\Beck\Projects\.Net\GloboTicket\GloboTicket.TicketManagement\GloboTicket.TicketManagement.Api
2023-04-19 16:06:09.655 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/swagger - -
2023-04-19 16:06:09.734 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/swagger - - - 301 0 - 83.8857ms
2023-04-19 16:06:09.751 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/swagger/index.html - -
2023-04-19 16:06:09.935 +03:00 [WRN] Unable to configure browser refresh script injection on the response. Consider manually adding '<script src="/_framework/aspnetcore-browser-refresh.js"></script>' to the body of the page.
2023-04-19 16:06:09.939 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/swagger/index.html - - - 200 - text/html;charset=utf-8 188.1996ms
2023-04-19 16:06:09.957 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/swagger/swagger-ui-standalone-preset.js - -
2023-04-19 16:06:09.957 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/swagger/swagger-ui-bundle.js - -
2023-04-19 16:06:09.957 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/swagger/swagger-ui.css - -
2023-04-19 16:06:09.964 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/_vs/browserLink - -
2023-04-19 16:06:10.048 +03:00 [INF] Sending file. Request path: '/swagger-ui.css'. Physical path: 'N/A'
2023-04-19 16:06:10.048 +03:00 [INF] Sending file. Request path: '/swagger-ui-standalone-preset.js'. Physical path: 'N/A'
2023-04-19 16:06:10.051 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/swagger/swagger-ui.css - - - 200 143943 text/css 93.5199ms
2023-04-19 16:06:10.052 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/swagger/swagger-ui-standalone-preset.js - - - 200 339486 text/javascript 94.9572ms
2023-04-19 16:06:10.054 +03:00 [INF] Sending file. Request path: '/swagger-ui-bundle.js'. Physical path: 'N/A'
2023-04-19 16:06:10.057 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/swagger/swagger-ui-bundle.js - - - 200 1096145 text/javascript 99.2815ms
2023-04-19 16:06:10.078 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 113.9825ms
2023-04-19 16:06:10.506 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/swagger/v1/swagger.json - -
2023-04-19 16:06:10.597 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/swagger/favicon-32x32.png - -
2023-04-19 16:06:10.599 +03:00 [INF] Sending file. Request path: '/favicon-32x32.png'. Physical path: 'N/A'
2023-04-19 16:06:10.600 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/swagger/favicon-32x32.png - - - 200 628 image/png 2.6907ms
2023-04-19 16:06:10.761 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 255.8003ms
2023-04-19 16:06:13.823 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7020/api/Events - -
2023-04-19 16:06:13.925 +03:00 [INF] CORS policy execution successful.
2023-04-19 16:06:13.927 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7020/api/Events - - - 204 - - 103.8753ms
2023-04-19 16:06:13.929 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/api/Events - -
2023-04-19 16:06:14.127 +03:00 [INF] CORS policy execution successful.
2023-04-19 16:06:14.134 +03:00 [INF] Executing endpoint 'GloboTicket.TicketManagement.Api.Controllers.EventsController.GetAllEvents (GloboTicket.TicketManagement.Api)'
2023-04-19 16:06:14.156 +03:00 [INF] Route matched with {action = "GetAllEvents", controller = "Events"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[GloboTicket.TicketManagement.Application.Features.Events.Queries.GetEventsList.EventListVm]]] GetAllEvents() on controller GloboTicket.TicketManagement.Api.Controllers.EventsController (GloboTicket.TicketManagement.Api).
2023-04-19 16:06:14.240 +03:00 [INF] Executing action method GloboTicket.TicketManagement.Api.Controllers.EventsController.GetAllEvents (GloboTicket.TicketManagement.Api) - Validation state: "Valid"
2023-04-19 16:06:15.877 +03:00 [INF] Executed DbCommand (38ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[EventId], [e].[Artist], [e].[CategoryId], [e].[CreatedBy], [e].[CreatedDate], [e].[Date], [e].[Description], [e].[ImageUrl], [e].[LastModifiedBy], [e].[LastModifiedDate], [e].[Name], [e].[Price]
FROM [Events] AS [e]
2023-04-19 16:06:16.016 +03:00 [INF] Executed action method GloboTicket.TicketManagement.Api.Controllers.EventsController.GetAllEvents (GloboTicket.TicketManagement.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1768.2109ms.
2023-04-19 16:06:16.027 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GloboTicket.TicketManagement.Application.Features.Events.Queries.GetEventsList.EventListVm, GloboTicket.TicketManagement.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-04-19 16:06:16.061 +03:00 [INF] Executed action GloboTicket.TicketManagement.Api.Controllers.EventsController.GetAllEvents (GloboTicket.TicketManagement.Api) in 1896.4811ms
2023-04-19 16:06:16.063 +03:00 [INF] Executed endpoint 'GloboTicket.TicketManagement.Api.Controllers.EventsController.GetAllEvents (GloboTicket.TicketManagement.Api)'
2023-04-19 16:06:16.066 +03:00 [INF] HTTP GET /api/Events responded 200 in 1933.5480 ms
2023-04-19 16:06:16.082 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/api/Events - - - 200 - application/json;+charset=utf-8 2152.4547ms
2023-04-19 16:06:16.527 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7020/api/Category/all - -
2023-04-19 16:06:16.530 +03:00 [INF] CORS policy execution successful.
2023-04-19 16:06:16.531 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7020/api/Category/all - - - 204 - - 3.9874ms
2023-04-19 16:06:16.533 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/api/Category/all - -
2023-04-19 16:06:16.535 +03:00 [INF] CORS policy execution successful.
2023-04-19 16:06:16.545 +03:00 [INF] Executing endpoint 'GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetAllCategories (GloboTicket.TicketManagement.Api)'
2023-04-19 16:06:16.551 +03:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[GloboTicket.TicketManagement.Application.Features.Categories.Queries.GetCategoriesList.CategoryListVm]]] GetAllCategories() on controller GloboTicket.TicketManagement.Api.Controllers.CategoryController (GloboTicket.TicketManagement.Api).
2023-04-19 16:06:16.578 +03:00 [INF] Executing action method GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetAllCategories (GloboTicket.TicketManagement.Api) - Validation state: "Valid"
2023-04-19 16:06:16.656 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[CategoryId], [c].[CreatedBy], [c].[CreatedDate], [c].[LastModifiedBy], [c].[LastModifiedDate], [c].[Name]
FROM [Categories] AS [c]
2023-04-19 16:06:16.690 +03:00 [INF] Executed action method GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetAllCategories (GloboTicket.TicketManagement.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 110.626ms.
2023-04-19 16:06:16.693 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GloboTicket.TicketManagement.Application.Features.Categories.Queries.GetCategoriesList.CategoryListVm, GloboTicket.TicketManagement.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-04-19 16:06:16.698 +03:00 [INF] Executed action GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetAllCategories (GloboTicket.TicketManagement.Api) in 145.2153ms
2023-04-19 16:06:16.700 +03:00 [INF] Executed endpoint 'GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetAllCategories (GloboTicket.TicketManagement.Api)'
2023-04-19 16:06:16.701 +03:00 [INF] HTTP GET /api/Category/all responded 200 in 156.3076 ms
2023-04-19 16:06:16.704 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/api/Category/all - - - 200 - application/json;+charset=utf-8 171.4060ms
2023-04-19 16:06:47.798 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7020/api/Events - -
2023-04-19 16:06:47.800 +03:00 [INF] CORS policy execution successful.
2023-04-19 16:06:47.800 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7020/api/Events - - - 204 - - 1.9749ms
2023-04-19 16:06:47.802 +03:00 [INF] Request starting HTTP/2 POST https://localhost:7020/api/Events application/json 340
2023-04-19 16:06:47.803 +03:00 [INF] CORS policy execution successful.
2023-04-19 16:06:47.804 +03:00 [INF] Executing endpoint 'GloboTicket.TicketManagement.Api.Controllers.EventsController.Create (GloboTicket.TicketManagement.Api)'
2023-04-19 16:06:47.811 +03:00 [INF] Route matched with {action = "Create", controller = "Events"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Guid]] Create(GloboTicket.TicketManagement.Application.Features.Events.Commands.CreateEvent.CreateEventCommand) on controller GloboTicket.TicketManagement.Api.Controllers.EventsController (GloboTicket.TicketManagement.Api).
2023-04-19 16:06:47.886 +03:00 [INF] Executing action method GloboTicket.TicketManagement.Api.Controllers.EventsController.Create (GloboTicket.TicketManagement.Api) - Validation state: "Valid"
2023-04-19 16:06:53.504 +03:00 [INF] Executed DbCommand (497ms) [Parameters=[@__name_0='?' (Size = 50), @__eventDate_Date_1='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Events] AS [e]
        WHERE [e].[Name] = @__name_0 AND CONVERT(date, [e].[Date]) = @__eventDate_Date_1) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-04-19 16:06:53.722 +03:00 [INF] Executed DbCommand (22ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (DbType = Guid), @p3='?' (Size = 4000), @p4='?' (DbType = DateTime2), @p5='?' (DbType = DateTime2), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (Size = 4000), @p9='?' (DbType = DateTime2), @p10='?' (Size = 50), @p11='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Events] ([EventId], [Artist], [CategoryId], [CreatedBy], [CreatedDate], [Date], [Description], [ImageUrl], [LastModifiedBy], [LastModifiedDate], [Name], [Price])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11);
2023-04-19 16:06:59.176 +03:00 [INF] Email sent
2023-04-19 16:06:59.178 +03:00 [ERR] Email sending failed
2023-04-19 16:06:59.181 +03:00 [INF] Executed action method GloboTicket.TicketManagement.Api.Controllers.EventsController.Create (GloboTicket.TicketManagement.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 11294.0262ms.
2023-04-19 16:06:59.184 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Guid'.
2023-04-19 16:06:59.187 +03:00 [INF] Executed action GloboTicket.TicketManagement.Api.Controllers.EventsController.Create (GloboTicket.TicketManagement.Api) in 11373.8742ms
2023-04-19 16:06:59.190 +03:00 [INF] Executed endpoint 'GloboTicket.TicketManagement.Api.Controllers.EventsController.Create (GloboTicket.TicketManagement.Api)'
2023-04-19 16:06:59.193 +03:00 [INF] HTTP POST /api/Events responded 200 in 11389.0466 ms
2023-04-19 16:06:59.197 +03:00 [INF] Request finished HTTP/2 POST https://localhost:7020/api/Events application/json 340 - 200 - application/json;+charset=utf-8 11395.1078ms
2023-04-19 16:06:59.242 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7020/api/Events - -
2023-04-19 16:06:59.243 +03:00 [INF] CORS policy execution successful.
2023-04-19 16:06:59.245 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7020/api/Events - - - 204 - - 2.8213ms
2023-04-19 16:06:59.248 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/api/Events - -
2023-04-19 16:06:59.250 +03:00 [INF] CORS policy execution successful.
2023-04-19 16:06:59.251 +03:00 [INF] Executing endpoint 'GloboTicket.TicketManagement.Api.Controllers.EventsController.GetAllEvents (GloboTicket.TicketManagement.Api)'
2023-04-19 16:06:59.254 +03:00 [INF] Route matched with {action = "GetAllEvents", controller = "Events"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[GloboTicket.TicketManagement.Application.Features.Events.Queries.GetEventsList.EventListVm]]] GetAllEvents() on controller GloboTicket.TicketManagement.Api.Controllers.EventsController (GloboTicket.TicketManagement.Api).
2023-04-19 16:06:59.281 +03:00 [INF] Executing action method GloboTicket.TicketManagement.Api.Controllers.EventsController.GetAllEvents (GloboTicket.TicketManagement.Api) - Validation state: "Valid"
2023-04-19 16:06:59.289 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[EventId], [e].[Artist], [e].[CategoryId], [e].[CreatedBy], [e].[CreatedDate], [e].[Date], [e].[Description], [e].[ImageUrl], [e].[LastModifiedBy], [e].[LastModifiedDate], [e].[Name], [e].[Price]
FROM [Events] AS [e]
2023-04-19 16:06:59.294 +03:00 [INF] Executed action method GloboTicket.TicketManagement.Api.Controllers.EventsController.GetAllEvents (GloboTicket.TicketManagement.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 11.4045ms.
2023-04-19 16:06:59.295 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GloboTicket.TicketManagement.Application.Features.Events.Queries.GetEventsList.EventListVm, GloboTicket.TicketManagement.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-04-19 16:06:59.296 +03:00 [INF] Executed action GloboTicket.TicketManagement.Api.Controllers.EventsController.GetAllEvents (GloboTicket.TicketManagement.Api) in 38.4823ms
2023-04-19 16:06:59.297 +03:00 [INF] Executed endpoint 'GloboTicket.TicketManagement.Api.Controllers.EventsController.GetAllEvents (GloboTicket.TicketManagement.Api)'
2023-04-19 16:06:59.298 +03:00 [INF] HTTP GET /api/Events responded 200 in 47.1408 ms
2023-04-19 16:06:59.300 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/api/Events - - - 200 - application/json;+charset=utf-8 52.0541ms
2023-04-19 16:07:15.338 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7020/api/Events/3e40abb4-c287-4c76-cf96-08db40d6f24f - -
2023-04-19 16:07:15.339 +03:00 [INF] CORS policy execution successful.
2023-04-19 16:07:15.341 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7020/api/Events/3e40abb4-c287-4c76-cf96-08db40d6f24f - - - 204 - - 3.3617ms
2023-04-19 16:07:15.343 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/api/Events/3e40abb4-c287-4c76-cf96-08db40d6f24f - -
2023-04-19 16:07:15.345 +03:00 [INF] CORS policy execution successful.
2023-04-19 16:07:15.347 +03:00 [INF] Executing endpoint 'GloboTicket.TicketManagement.Api.Controllers.EventsController.GetEventById (GloboTicket.TicketManagement.Api)'
2023-04-19 16:07:15.354 +03:00 [INF] Route matched with {action = "GetEventById", controller = "Events"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[GloboTicket.TicketManagement.Application.Features.Events.Queries.GetEventDetail.EventDetailVm]] GetEventById(System.Guid) on controller GloboTicket.TicketManagement.Api.Controllers.EventsController (GloboTicket.TicketManagement.Api).
2023-04-19 16:07:15.377 +03:00 [INF] Executing action method GloboTicket.TicketManagement.Api.Controllers.EventsController.GetEventById (GloboTicket.TicketManagement.Api) - Validation state: "Valid"
2023-04-19 16:07:15.412 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[EventId], [e].[Artist], [e].[CategoryId], [e].[CreatedBy], [e].[CreatedDate], [e].[Date], [e].[Description], [e].[ImageUrl], [e].[LastModifiedBy], [e].[LastModifiedDate], [e].[Name], [e].[Price]
FROM [Events] AS [e]
WHERE [e].[EventId] = @__get_Item_0
2023-04-19 16:07:15.432 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[CategoryId], [c].[CreatedBy], [c].[CreatedDate], [c].[LastModifiedBy], [c].[LastModifiedDate], [c].[Name]
FROM [Categories] AS [c]
WHERE [c].[CategoryId] = @__get_Item_0
2023-04-19 16:07:15.463 +03:00 [INF] Executed action method GloboTicket.TicketManagement.Api.Controllers.EventsController.GetEventById (GloboTicket.TicketManagement.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 83.5244ms.
2023-04-19 16:07:15.465 +03:00 [INF] Executing OkObjectResult, writing value of type 'GloboTicket.TicketManagement.Application.Features.Events.Queries.GetEventDetail.EventDetailVm'.
2023-04-19 16:07:15.472 +03:00 [INF] Executed action GloboTicket.TicketManagement.Api.Controllers.EventsController.GetEventById (GloboTicket.TicketManagement.Api) in 114.1492ms
2023-04-19 16:07:15.475 +03:00 [INF] Executed endpoint 'GloboTicket.TicketManagement.Api.Controllers.EventsController.GetEventById (GloboTicket.TicketManagement.Api)'
2023-04-19 16:07:15.477 +03:00 [INF] HTTP GET /api/Events/3e40abb4-c287-4c76-cf96-08db40d6f24f responded 200 in 129.8011 ms
2023-04-19 16:07:15.479 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/api/Events/3e40abb4-c287-4c76-cf96-08db40d6f24f - - - 200 - application/json;+charset=utf-8 135.9524ms
2023-04-19 16:07:15.513 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7020/api/Category/all - -
2023-04-19 16:07:15.513 +03:00 [INF] CORS policy execution successful.
2023-04-19 16:07:15.514 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7020/api/Category/all - - - 204 - - 1.4681ms
2023-04-19 16:07:15.516 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/api/Category/all - -
2023-04-19 16:07:15.517 +03:00 [INF] CORS policy execution successful.
2023-04-19 16:07:15.519 +03:00 [INF] Executing endpoint 'GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetAllCategories (GloboTicket.TicketManagement.Api)'
2023-04-19 16:07:15.521 +03:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[GloboTicket.TicketManagement.Application.Features.Categories.Queries.GetCategoriesList.CategoryListVm]]] GetAllCategories() on controller GloboTicket.TicketManagement.Api.Controllers.CategoryController (GloboTicket.TicketManagement.Api).
2023-04-19 16:07:15.541 +03:00 [INF] Executing action method GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetAllCategories (GloboTicket.TicketManagement.Api) - Validation state: "Valid"
2023-04-19 16:07:15.545 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[CategoryId], [c].[CreatedBy], [c].[CreatedDate], [c].[LastModifiedBy], [c].[LastModifiedDate], [c].[Name]
FROM [Categories] AS [c]
2023-04-19 16:07:15.547 +03:00 [INF] Executed action method GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetAllCategories (GloboTicket.TicketManagement.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 4.5573ms.
2023-04-19 16:07:15.548 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GloboTicket.TicketManagement.Application.Features.Categories.Queries.GetCategoriesList.CategoryListVm, GloboTicket.TicketManagement.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-04-19 16:07:15.549 +03:00 [INF] Executed action GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetAllCategories (GloboTicket.TicketManagement.Api) in 26.6857ms
2023-04-19 16:07:15.551 +03:00 [INF] Executed endpoint 'GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetAllCategories (GloboTicket.TicketManagement.Api)'
2023-04-19 16:07:15.551 +03:00 [INF] HTTP GET /api/Category/all responded 200 in 32.6600 ms
2023-04-19 16:07:15.553 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/api/Category/all - - - 200 - application/json;+charset=utf-8 37.3044ms
2023-04-19 16:07:20.504 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7020/api/Events - -
2023-04-19 16:07:20.506 +03:00 [INF] CORS policy execution successful.
2023-04-19 16:07:20.507 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7020/api/Events - - - 204 - - 3.7920ms
2023-04-19 16:07:20.510 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/api/Events - -
2023-04-19 16:07:20.511 +03:00 [INF] CORS policy execution successful.
2023-04-19 16:07:20.513 +03:00 [INF] Executing endpoint 'GloboTicket.TicketManagement.Api.Controllers.EventsController.GetAllEvents (GloboTicket.TicketManagement.Api)'
2023-04-19 16:07:20.515 +03:00 [INF] Route matched with {action = "GetAllEvents", controller = "Events"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[GloboTicket.TicketManagement.Application.Features.Events.Queries.GetEventsList.EventListVm]]] GetAllEvents() on controller GloboTicket.TicketManagement.Api.Controllers.EventsController (GloboTicket.TicketManagement.Api).
2023-04-19 16:07:20.535 +03:00 [INF] Executing action method GloboTicket.TicketManagement.Api.Controllers.EventsController.GetAllEvents (GloboTicket.TicketManagement.Api) - Validation state: "Valid"
2023-04-19 16:07:20.542 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[EventId], [e].[Artist], [e].[CategoryId], [e].[CreatedBy], [e].[CreatedDate], [e].[Date], [e].[Description], [e].[ImageUrl], [e].[LastModifiedBy], [e].[LastModifiedDate], [e].[Name], [e].[Price]
FROM [Events] AS [e]
2023-04-19 16:07:20.546 +03:00 [INF] Executed action method GloboTicket.TicketManagement.Api.Controllers.EventsController.GetAllEvents (GloboTicket.TicketManagement.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 8.8424ms.
2023-04-19 16:07:20.547 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GloboTicket.TicketManagement.Application.Features.Events.Queries.GetEventsList.EventListVm, GloboTicket.TicketManagement.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-04-19 16:07:20.550 +03:00 [INF] Executed action GloboTicket.TicketManagement.Api.Controllers.EventsController.GetAllEvents (GloboTicket.TicketManagement.Api) in 32.8036ms
2023-04-19 16:07:20.551 +03:00 [INF] Executed endpoint 'GloboTicket.TicketManagement.Api.Controllers.EventsController.GetAllEvents (GloboTicket.TicketManagement.Api)'
2023-04-19 16:07:20.552 +03:00 [INF] HTTP GET /api/Events responded 200 in 39.0194 ms
2023-04-19 16:07:20.554 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/api/Events - - - 200 - application/json;+charset=utf-8 44.5544ms
2023-04-19 16:07:28.312 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7020/api/Events/3e40abb4-c287-4c76-cf96-08db40d6f24f - -
2023-04-19 16:07:28.313 +03:00 [INF] CORS policy execution successful.
2023-04-19 16:07:28.314 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7020/api/Events/3e40abb4-c287-4c76-cf96-08db40d6f24f - - - 204 - - 2.6173ms
2023-04-19 16:07:28.316 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/api/Events/3e40abb4-c287-4c76-cf96-08db40d6f24f - -
2023-04-19 16:07:28.319 +03:00 [INF] CORS policy execution successful.
2023-04-19 16:07:28.320 +03:00 [INF] Executing endpoint 'GloboTicket.TicketManagement.Api.Controllers.EventsController.GetEventById (GloboTicket.TicketManagement.Api)'
2023-04-19 16:07:28.322 +03:00 [INF] Route matched with {action = "GetEventById", controller = "Events"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[GloboTicket.TicketManagement.Application.Features.Events.Queries.GetEventDetail.EventDetailVm]] GetEventById(System.Guid) on controller GloboTicket.TicketManagement.Api.Controllers.EventsController (GloboTicket.TicketManagement.Api).
2023-04-19 16:07:28.346 +03:00 [INF] Executing action method GloboTicket.TicketManagement.Api.Controllers.EventsController.GetEventById (GloboTicket.TicketManagement.Api) - Validation state: "Valid"
2023-04-19 16:07:28.355 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[EventId], [e].[Artist], [e].[CategoryId], [e].[CreatedBy], [e].[CreatedDate], [e].[Date], [e].[Description], [e].[ImageUrl], [e].[LastModifiedBy], [e].[LastModifiedDate], [e].[Name], [e].[Price]
FROM [Events] AS [e]
WHERE [e].[EventId] = @__get_Item_0
2023-04-19 16:07:28.359 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[CategoryId], [c].[CreatedBy], [c].[CreatedDate], [c].[LastModifiedBy], [c].[LastModifiedDate], [c].[Name]
FROM [Categories] AS [c]
WHERE [c].[CategoryId] = @__get_Item_0
2023-04-19 16:07:28.362 +03:00 [INF] Executed action method GloboTicket.TicketManagement.Api.Controllers.EventsController.GetEventById (GloboTicket.TicketManagement.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 14.8808ms.
2023-04-19 16:07:28.364 +03:00 [INF] Executing OkObjectResult, writing value of type 'GloboTicket.TicketManagement.Application.Features.Events.Queries.GetEventDetail.EventDetailVm'.
2023-04-19 16:07:28.366 +03:00 [INF] Executed action GloboTicket.TicketManagement.Api.Controllers.EventsController.GetEventById (GloboTicket.TicketManagement.Api) in 42.2574ms
2023-04-19 16:07:28.368 +03:00 [INF] Executed endpoint 'GloboTicket.TicketManagement.Api.Controllers.EventsController.GetEventById (GloboTicket.TicketManagement.Api)'
2023-04-19 16:07:28.369 +03:00 [INF] HTTP GET /api/Events/3e40abb4-c287-4c76-cf96-08db40d6f24f responded 200 in 49.1508 ms
2023-04-19 16:07:28.371 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/api/Events/3e40abb4-c287-4c76-cf96-08db40d6f24f - - - 200 - application/json;+charset=utf-8 55.1121ms
2023-04-19 16:07:28.377 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7020/api/Category/all - -
2023-04-19 16:07:28.378 +03:00 [INF] CORS policy execution successful.
2023-04-19 16:07:28.378 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7020/api/Category/all - - - 204 - - 1.5995ms
2023-04-19 16:07:28.380 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/api/Category/all - -
2023-04-19 16:07:28.381 +03:00 [INF] CORS policy execution successful.
2023-04-19 16:07:28.383 +03:00 [INF] Executing endpoint 'GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetAllCategories (GloboTicket.TicketManagement.Api)'
2023-04-19 16:07:28.384 +03:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[GloboTicket.TicketManagement.Application.Features.Categories.Queries.GetCategoriesList.CategoryListVm]]] GetAllCategories() on controller GloboTicket.TicketManagement.Api.Controllers.CategoryController (GloboTicket.TicketManagement.Api).
2023-04-19 16:07:28.405 +03:00 [INF] Executing action method GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetAllCategories (GloboTicket.TicketManagement.Api) - Validation state: "Valid"
2023-04-19 16:07:28.410 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[CategoryId], [c].[CreatedBy], [c].[CreatedDate], [c].[LastModifiedBy], [c].[LastModifiedDate], [c].[Name]
FROM [Categories] AS [c]
2023-04-19 16:07:28.413 +03:00 [INF] Executed action method GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetAllCategories (GloboTicket.TicketManagement.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 6.3289ms.
2023-04-19 16:07:28.414 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GloboTicket.TicketManagement.Application.Features.Categories.Queries.GetCategoriesList.CategoryListVm, GloboTicket.TicketManagement.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-04-19 16:07:28.415 +03:00 [INF] Executed action GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetAllCategories (GloboTicket.TicketManagement.Api) in 29.8791ms
2023-04-19 16:07:28.417 +03:00 [INF] Executed endpoint 'GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetAllCategories (GloboTicket.TicketManagement.Api)'
2023-04-19 16:07:28.418 +03:00 [INF] HTTP GET /api/Category/all responded 200 in 34.5974 ms
2023-04-19 16:07:28.419 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/api/Category/all - - - 200 - application/json;+charset=utf-8 39.3565ms
2023-04-19 16:07:38.813 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7020/api/Events - -
2023-04-19 16:07:38.815 +03:00 [INF] CORS policy execution successful.
2023-04-19 16:07:38.815 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7020/api/Events - - - 204 - - 2.4009ms
2023-04-19 16:07:38.817 +03:00 [INF] Request starting HTTP/2 PUT https://localhost:7020/api/Events application/json 298
2023-04-19 16:07:38.818 +03:00 [INF] CORS policy execution successful.
2023-04-19 16:07:38.819 +03:00 [INF] Executing endpoint 'GloboTicket.TicketManagement.Api.Controllers.EventsController.Update (GloboTicket.TicketManagement.Api)'
2023-04-19 16:07:38.823 +03:00 [INF] Route matched with {action = "Update", controller = "Events"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] Update(GloboTicket.TicketManagement.Application.Features.Events.Commands.UpdateEvent.UpdateEventCommand) on controller GloboTicket.TicketManagement.Api.Controllers.EventsController (GloboTicket.TicketManagement.Api).
2023-04-19 16:07:38.887 +03:00 [INF] Executing action method GloboTicket.TicketManagement.Api.Controllers.EventsController.Update (GloboTicket.TicketManagement.Api) - Validation state: "Valid"
2023-04-19 16:07:38.900 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[EventId], [e].[Artist], [e].[CategoryId], [e].[CreatedBy], [e].[CreatedDate], [e].[Date], [e].[Description], [e].[ImageUrl], [e].[LastModifiedBy], [e].[LastModifiedDate], [e].[Name], [e].[Price]
FROM [Events] AS [e]
WHERE [e].[EventId] = @__get_Item_0
2023-04-19 16:07:38.936 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@p11='?' (DbType = Guid), @p0='?' (Size = 4000), @p1='?' (DbType = Guid), @p2='?' (Size = 4000), @p3='?' (DbType = DateTime2), @p4='?' (DbType = DateTime2), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (DbType = DateTime2), @p9='?' (Size = 50), @p10='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Events] SET [Artist] = @p0, [CategoryId] = @p1, [CreatedBy] = @p2, [CreatedDate] = @p3, [Date] = @p4, [Description] = @p5, [ImageUrl] = @p6, [LastModifiedBy] = @p7, [LastModifiedDate] = @p8, [Name] = @p9, [Price] = @p10
OUTPUT 1
WHERE [EventId] = @p11;
2023-04-19 16:07:38.948 +03:00 [INF] Executed action method GloboTicket.TicketManagement.Api.Controllers.EventsController.Update (GloboTicket.TicketManagement.Api), returned result Microsoft.AspNetCore.Mvc.NoContentResult in 59.1605ms.
2023-04-19 16:07:38.954 +03:00 [INF] Executing StatusCodeResult, setting HTTP status code 204
2023-04-19 16:07:38.955 +03:00 [INF] Executed action GloboTicket.TicketManagement.Api.Controllers.EventsController.Update (GloboTicket.TicketManagement.Api) in 130.6816ms
2023-04-19 16:07:38.957 +03:00 [INF] Executed endpoint 'GloboTicket.TicketManagement.Api.Controllers.EventsController.Update (GloboTicket.TicketManagement.Api)'
2023-04-19 16:07:38.958 +03:00 [INF] HTTP PUT /api/Events responded 204 in 138.8861 ms
2023-04-19 16:07:38.960 +03:00 [INF] Request finished HTTP/2 PUT https://localhost:7020/api/Events application/json 298 - 204 - - 142.9309ms
2023-04-19 16:07:38.975 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/api/Events - -
2023-04-19 16:07:38.976 +03:00 [INF] CORS policy execution successful.
2023-04-19 16:07:38.977 +03:00 [INF] Executing endpoint 'GloboTicket.TicketManagement.Api.Controllers.EventsController.GetAllEvents (GloboTicket.TicketManagement.Api)'
2023-04-19 16:07:38.979 +03:00 [INF] Route matched with {action = "GetAllEvents", controller = "Events"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[GloboTicket.TicketManagement.Application.Features.Events.Queries.GetEventsList.EventListVm]]] GetAllEvents() on controller GloboTicket.TicketManagement.Api.Controllers.EventsController (GloboTicket.TicketManagement.Api).
2023-04-19 16:07:39.006 +03:00 [INF] Executing action method GloboTicket.TicketManagement.Api.Controllers.EventsController.GetAllEvents (GloboTicket.TicketManagement.Api) - Validation state: "Valid"
2023-04-19 16:07:39.010 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[EventId], [e].[Artist], [e].[CategoryId], [e].[CreatedBy], [e].[CreatedDate], [e].[Date], [e].[Description], [e].[ImageUrl], [e].[LastModifiedBy], [e].[LastModifiedDate], [e].[Name], [e].[Price]
FROM [Events] AS [e]
2023-04-19 16:07:39.012 +03:00 [INF] Executed action method GloboTicket.TicketManagement.Api.Controllers.EventsController.GetAllEvents (GloboTicket.TicketManagement.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 5.1371ms.
2023-04-19 16:07:39.013 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GloboTicket.TicketManagement.Application.Features.Events.Queries.GetEventsList.EventListVm, GloboTicket.TicketManagement.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-04-19 16:07:39.014 +03:00 [INF] Executed action GloboTicket.TicketManagement.Api.Controllers.EventsController.GetAllEvents (GloboTicket.TicketManagement.Api) in 32.3685ms
2023-04-19 16:07:39.016 +03:00 [INF] Executed endpoint 'GloboTicket.TicketManagement.Api.Controllers.EventsController.GetAllEvents (GloboTicket.TicketManagement.Api)'
2023-04-19 16:07:39.017 +03:00 [INF] HTTP GET /api/Events responded 200 in 39.5697 ms
2023-04-19 16:07:39.019 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/api/Events - - - 200 - application/json;+charset=utf-8 44.3588ms
2023-04-19 16:07:48.217 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7020/api/Category/allwithevents?includeHistory=false - -
2023-04-19 16:07:48.218 +03:00 [INF] CORS policy execution successful.
2023-04-19 16:07:48.220 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7020/api/Category/allwithevents?includeHistory=false - - - 204 - - 3.3402ms
2023-04-19 16:07:48.222 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/api/Category/allwithevents?includeHistory=false - -
2023-04-19 16:07:48.224 +03:00 [INF] CORS policy execution successful.
2023-04-19 16:07:48.224 +03:00 [INF] Executing endpoint 'GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetCategoriesWithEvents (GloboTicket.TicketManagement.Api)'
2023-04-19 16:07:48.228 +03:00 [INF] Route matched with {action = "GetCategoriesWithEvents", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[GloboTicket.TicketManagement.Application.Features.Categories.Queries.GetCategoriesListWithEvents.CategoryEventListVm]]] GetCategoriesWithEvents(Boolean) on controller GloboTicket.TicketManagement.Api.Controllers.CategoryController (GloboTicket.TicketManagement.Api).
2023-04-19 16:07:48.254 +03:00 [INF] Executing action method GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetCategoriesWithEvents (GloboTicket.TicketManagement.Api) - Validation state: "Valid"
2023-04-19 16:07:50.666 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[CategoryId], [c].[CreatedBy], [c].[CreatedDate], [c].[LastModifiedBy], [c].[LastModifiedDate], [c].[Name], [e].[EventId], [e].[Artist], [e].[CategoryId], [e].[CreatedBy], [e].[CreatedDate], [e].[Date], [e].[Description], [e].[ImageUrl], [e].[LastModifiedBy], [e].[LastModifiedDate], [e].[Name], [e].[Price]
FROM [Categories] AS [c]
LEFT JOIN [Events] AS [e] ON [c].[CategoryId] = [e].[CategoryId]
ORDER BY [c].[CategoryId]
2023-04-19 16:07:50.684 +03:00 [INF] Executed action method GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetCategoriesWithEvents (GloboTicket.TicketManagement.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 2428.7581ms.
2023-04-19 16:07:50.686 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GloboTicket.TicketManagement.Application.Features.Categories.Queries.GetCategoriesListWithEvents.CategoryEventListVm, GloboTicket.TicketManagement.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-04-19 16:07:50.694 +03:00 [INF] Executed action GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetCategoriesWithEvents (GloboTicket.TicketManagement.Api) in 2464.5367ms
2023-04-19 16:07:50.696 +03:00 [INF] Executed endpoint 'GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetCategoriesWithEvents (GloboTicket.TicketManagement.Api)'
2023-04-19 16:07:50.698 +03:00 [INF] HTTP GET /api/Category/allwithevents responded 200 in 2474.1781 ms
2023-04-19 16:07:50.700 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/api/Category/allwithevents?includeHistory=false - - - 200 - application/json;+charset=utf-8 2477.6798ms
2023-04-19 16:07:53.178 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7020/api/Events - -
2023-04-19 16:07:53.180 +03:00 [INF] CORS policy execution successful.
2023-04-19 16:07:53.181 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7020/api/Events - - - 204 - - 3.2528ms
2023-04-19 16:07:53.183 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/api/Events - -
2023-04-19 16:07:53.184 +03:00 [INF] CORS policy execution successful.
2023-04-19 16:07:53.185 +03:00 [INF] Executing endpoint 'GloboTicket.TicketManagement.Api.Controllers.EventsController.GetAllEvents (GloboTicket.TicketManagement.Api)'
2023-04-19 16:07:53.186 +03:00 [INF] Route matched with {action = "GetAllEvents", controller = "Events"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[GloboTicket.TicketManagement.Application.Features.Events.Queries.GetEventsList.EventListVm]]] GetAllEvents() on controller GloboTicket.TicketManagement.Api.Controllers.EventsController (GloboTicket.TicketManagement.Api).
2023-04-19 16:07:53.210 +03:00 [INF] Executing action method GloboTicket.TicketManagement.Api.Controllers.EventsController.GetAllEvents (GloboTicket.TicketManagement.Api) - Validation state: "Valid"
2023-04-19 16:07:53.214 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[EventId], [e].[Artist], [e].[CategoryId], [e].[CreatedBy], [e].[CreatedDate], [e].[Date], [e].[Description], [e].[ImageUrl], [e].[LastModifiedBy], [e].[LastModifiedDate], [e].[Name], [e].[Price]
FROM [Events] AS [e]
2023-04-19 16:07:53.216 +03:00 [INF] Executed action method GloboTicket.TicketManagement.Api.Controllers.EventsController.GetAllEvents (GloboTicket.TicketManagement.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 4.8073ms.
2023-04-19 16:07:53.217 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GloboTicket.TicketManagement.Application.Features.Events.Queries.GetEventsList.EventListVm, GloboTicket.TicketManagement.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-04-19 16:07:53.218 +03:00 [INF] Executed action GloboTicket.TicketManagement.Api.Controllers.EventsController.GetAllEvents (GloboTicket.TicketManagement.Api) in 29.3046ms
2023-04-19 16:07:53.219 +03:00 [INF] Executed endpoint 'GloboTicket.TicketManagement.Api.Controllers.EventsController.GetAllEvents (GloboTicket.TicketManagement.Api)'
2023-04-19 16:07:53.220 +03:00 [INF] HTTP GET /api/Events responded 200 in 34.9390 ms
2023-04-19 16:07:53.222 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/api/Events - - - 200 - application/json;+charset=utf-8 39.4822ms
2023-04-19 16:07:59.397 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7020/api/Events/3e40abb4-c287-4c76-cf96-08db40d6f24f - -
2023-04-19 16:07:59.398 +03:00 [INF] CORS policy execution successful.
2023-04-19 16:07:59.399 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7020/api/Events/3e40abb4-c287-4c76-cf96-08db40d6f24f - - - 204 - - 2.6988ms
2023-04-19 16:07:59.401 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/api/Events/3e40abb4-c287-4c76-cf96-08db40d6f24f - -
2023-04-19 16:07:59.403 +03:00 [INF] CORS policy execution successful.
2023-04-19 16:07:59.404 +03:00 [INF] Executing endpoint 'GloboTicket.TicketManagement.Api.Controllers.EventsController.GetEventById (GloboTicket.TicketManagement.Api)'
2023-04-19 16:07:59.406 +03:00 [INF] Route matched with {action = "GetEventById", controller = "Events"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[GloboTicket.TicketManagement.Application.Features.Events.Queries.GetEventDetail.EventDetailVm]] GetEventById(System.Guid) on controller GloboTicket.TicketManagement.Api.Controllers.EventsController (GloboTicket.TicketManagement.Api).
2023-04-19 16:07:59.425 +03:00 [INF] Executing action method GloboTicket.TicketManagement.Api.Controllers.EventsController.GetEventById (GloboTicket.TicketManagement.Api) - Validation state: "Valid"
2023-04-19 16:07:59.431 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[EventId], [e].[Artist], [e].[CategoryId], [e].[CreatedBy], [e].[CreatedDate], [e].[Date], [e].[Description], [e].[ImageUrl], [e].[LastModifiedBy], [e].[LastModifiedDate], [e].[Name], [e].[Price]
FROM [Events] AS [e]
WHERE [e].[EventId] = @__get_Item_0
2023-04-19 16:07:59.435 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[CategoryId], [c].[CreatedBy], [c].[CreatedDate], [c].[LastModifiedBy], [c].[LastModifiedDate], [c].[Name]
FROM [Categories] AS [c]
WHERE [c].[CategoryId] = @__get_Item_0
2023-04-19 16:07:59.437 +03:00 [INF] Executed action method GloboTicket.TicketManagement.Api.Controllers.EventsController.GetEventById (GloboTicket.TicketManagement.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 10.2607ms.
2023-04-19 16:07:59.439 +03:00 [INF] Executing OkObjectResult, writing value of type 'GloboTicket.TicketManagement.Application.Features.Events.Queries.GetEventDetail.EventDetailVm'.
2023-04-19 16:07:59.440 +03:00 [INF] Executed action GloboTicket.TicketManagement.Api.Controllers.EventsController.GetEventById (GloboTicket.TicketManagement.Api) in 32.2947ms
2023-04-19 16:07:59.441 +03:00 [INF] Executed endpoint 'GloboTicket.TicketManagement.Api.Controllers.EventsController.GetEventById (GloboTicket.TicketManagement.Api)'
2023-04-19 16:07:59.444 +03:00 [INF] HTTP GET /api/Events/3e40abb4-c287-4c76-cf96-08db40d6f24f responded 200 in 40.1482 ms
2023-04-19 16:07:59.445 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/api/Events/3e40abb4-c287-4c76-cf96-08db40d6f24f - - - 200 - application/json;+charset=utf-8 43.9989ms
2023-04-19 16:07:59.451 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7020/api/Category/all - -
2023-04-19 16:07:59.451 +03:00 [INF] CORS policy execution successful.
2023-04-19 16:07:59.452 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7020/api/Category/all - - - 204 - - 1.1472ms
2023-04-19 16:07:59.454 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/api/Category/all - -
2023-04-19 16:07:59.455 +03:00 [INF] CORS policy execution successful.
2023-04-19 16:07:59.456 +03:00 [INF] Executing endpoint 'GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetAllCategories (GloboTicket.TicketManagement.Api)'
2023-04-19 16:07:59.457 +03:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[GloboTicket.TicketManagement.Application.Features.Categories.Queries.GetCategoriesList.CategoryListVm]]] GetAllCategories() on controller GloboTicket.TicketManagement.Api.Controllers.CategoryController (GloboTicket.TicketManagement.Api).
2023-04-19 16:07:59.475 +03:00 [INF] Executing action method GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetAllCategories (GloboTicket.TicketManagement.Api) - Validation state: "Valid"
2023-04-19 16:07:59.479 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[CategoryId], [c].[CreatedBy], [c].[CreatedDate], [c].[LastModifiedBy], [c].[LastModifiedDate], [c].[Name]
FROM [Categories] AS [c]
2023-04-19 16:07:59.481 +03:00 [INF] Executed action method GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetAllCategories (GloboTicket.TicketManagement.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 5.5616ms.
2023-04-19 16:07:59.482 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GloboTicket.TicketManagement.Application.Features.Categories.Queries.GetCategoriesList.CategoryListVm, GloboTicket.TicketManagement.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-04-19 16:07:59.483 +03:00 [INF] Executed action GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetAllCategories (GloboTicket.TicketManagement.Api) in 25.0835ms
2023-04-19 16:07:59.485 +03:00 [INF] Executed endpoint 'GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetAllCategories (GloboTicket.TicketManagement.Api)'
2023-04-19 16:07:59.486 +03:00 [INF] HTTP GET /api/Category/all responded 200 in 30.4547 ms
2023-04-19 16:07:59.489 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/api/Category/all - - - 200 - application/json;+charset=utf-8 34.2430ms
2023-04-19 16:08:03.071 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7020/api/Events - -
2023-04-19 16:08:03.073 +03:00 [INF] CORS policy execution successful.
2023-04-19 16:08:03.073 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7020/api/Events - - - 204 - - 2.2490ms
2023-04-19 16:08:03.075 +03:00 [INF] Request starting HTTP/2 PUT https://localhost:7020/api/Events application/json 389
2023-04-19 16:08:03.076 +03:00 [INF] CORS policy execution successful.
2023-04-19 16:08:03.077 +03:00 [INF] Executing endpoint 'GloboTicket.TicketManagement.Api.Controllers.EventsController.Update (GloboTicket.TicketManagement.Api)'
2023-04-19 16:08:03.078 +03:00 [INF] Route matched with {action = "Update", controller = "Events"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] Update(GloboTicket.TicketManagement.Application.Features.Events.Commands.UpdateEvent.UpdateEventCommand) on controller GloboTicket.TicketManagement.Api.Controllers.EventsController (GloboTicket.TicketManagement.Api).
2023-04-19 16:08:03.115 +03:00 [INF] Executing action method GloboTicket.TicketManagement.Api.Controllers.EventsController.Update (GloboTicket.TicketManagement.Api) - Validation state: "Valid"
2023-04-19 16:08:03.120 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[EventId], [e].[Artist], [e].[CategoryId], [e].[CreatedBy], [e].[CreatedDate], [e].[Date], [e].[Description], [e].[ImageUrl], [e].[LastModifiedBy], [e].[LastModifiedDate], [e].[Name], [e].[Price]
FROM [Events] AS [e]
WHERE [e].[EventId] = @__get_Item_0
2023-04-19 16:08:03.151 +03:00 [INF] Executed DbCommand (24ms) [Parameters=[@p11='?' (DbType = Guid), @p0='?' (Size = 4000), @p1='?' (DbType = Guid), @p2='?' (Size = 4000), @p3='?' (DbType = DateTime2), @p4='?' (DbType = DateTime2), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (Size = 4000), @p8='?' (DbType = DateTime2), @p9='?' (Size = 50), @p10='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Events] SET [Artist] = @p0, [CategoryId] = @p1, [CreatedBy] = @p2, [CreatedDate] = @p3, [Date] = @p4, [Description] = @p5, [ImageUrl] = @p6, [LastModifiedBy] = @p7, [LastModifiedDate] = @p8, [Name] = @p9, [Price] = @p10
OUTPUT 1
WHERE [EventId] = @p11;
2023-04-19 16:08:03.157 +03:00 [INF] Executed action method GloboTicket.TicketManagement.Api.Controllers.EventsController.Update (GloboTicket.TicketManagement.Api), returned result Microsoft.AspNetCore.Mvc.NoContentResult in 40.8286ms.
2023-04-19 16:08:03.161 +03:00 [INF] Executing StatusCodeResult, setting HTTP status code 204
2023-04-19 16:08:03.163 +03:00 [INF] Executed action GloboTicket.TicketManagement.Api.Controllers.EventsController.Update (GloboTicket.TicketManagement.Api) in 83.4725ms
2023-04-19 16:08:03.166 +03:00 [INF] Executed endpoint 'GloboTicket.TicketManagement.Api.Controllers.EventsController.Update (GloboTicket.TicketManagement.Api)'
2023-04-19 16:08:03.168 +03:00 [INF] HTTP PUT /api/Events responded 204 in 90.8020 ms
2023-04-19 16:08:03.171 +03:00 [INF] Request finished HTTP/2 PUT https://localhost:7020/api/Events application/json 389 - 204 - - 95.8730ms
2023-04-19 16:08:03.194 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/api/Events - -
2023-04-19 16:08:03.195 +03:00 [INF] CORS policy execution successful.
2023-04-19 16:08:03.196 +03:00 [INF] Executing endpoint 'GloboTicket.TicketManagement.Api.Controllers.EventsController.GetAllEvents (GloboTicket.TicketManagement.Api)'
2023-04-19 16:08:03.197 +03:00 [INF] Route matched with {action = "GetAllEvents", controller = "Events"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[GloboTicket.TicketManagement.Application.Features.Events.Queries.GetEventsList.EventListVm]]] GetAllEvents() on controller GloboTicket.TicketManagement.Api.Controllers.EventsController (GloboTicket.TicketManagement.Api).
2023-04-19 16:08:03.216 +03:00 [INF] Executing action method GloboTicket.TicketManagement.Api.Controllers.EventsController.GetAllEvents (GloboTicket.TicketManagement.Api) - Validation state: "Valid"
2023-04-19 16:08:03.222 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[EventId], [e].[Artist], [e].[CategoryId], [e].[CreatedBy], [e].[CreatedDate], [e].[Date], [e].[Description], [e].[ImageUrl], [e].[LastModifiedBy], [e].[LastModifiedDate], [e].[Name], [e].[Price]
FROM [Events] AS [e]
2023-04-19 16:08:03.224 +03:00 [INF] Executed action method GloboTicket.TicketManagement.Api.Controllers.EventsController.GetAllEvents (GloboTicket.TicketManagement.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 7.5263ms.
2023-04-19 16:08:03.226 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GloboTicket.TicketManagement.Application.Features.Events.Queries.GetEventsList.EventListVm, GloboTicket.TicketManagement.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-04-19 16:08:03.227 +03:00 [INF] Executed action GloboTicket.TicketManagement.Api.Controllers.EventsController.GetAllEvents (GloboTicket.TicketManagement.Api) in 28.9858ms
2023-04-19 16:08:03.229 +03:00 [INF] Executed endpoint 'GloboTicket.TicketManagement.Api.Controllers.EventsController.GetAllEvents (GloboTicket.TicketManagement.Api)'
2023-04-19 16:08:03.230 +03:00 [INF] HTTP GET /api/Events responded 200 in 34.2852 ms
2023-04-19 16:08:03.231 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/api/Events - - - 200 - application/json;+charset=utf-8 37.7258ms
2023-04-19 16:08:06.690 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7020/api/Events/3e40abb4-c287-4c76-cf96-08db40d6f24f - -
2023-04-19 16:08:06.691 +03:00 [INF] CORS policy execution successful.
2023-04-19 16:08:06.693 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7020/api/Events/3e40abb4-c287-4c76-cf96-08db40d6f24f - - - 204 - - 3.1935ms
2023-04-19 16:08:06.695 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/api/Events/3e40abb4-c287-4c76-cf96-08db40d6f24f - -
2023-04-19 16:08:06.697 +03:00 [INF] CORS policy execution successful.
2023-04-19 16:08:06.698 +03:00 [INF] Executing endpoint 'GloboTicket.TicketManagement.Api.Controllers.EventsController.GetEventById (GloboTicket.TicketManagement.Api)'
2023-04-19 16:08:06.700 +03:00 [INF] Route matched with {action = "GetEventById", controller = "Events"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[GloboTicket.TicketManagement.Application.Features.Events.Queries.GetEventDetail.EventDetailVm]] GetEventById(System.Guid) on controller GloboTicket.TicketManagement.Api.Controllers.EventsController (GloboTicket.TicketManagement.Api).
2023-04-19 16:08:06.728 +03:00 [INF] Executing action method GloboTicket.TicketManagement.Api.Controllers.EventsController.GetEventById (GloboTicket.TicketManagement.Api) - Validation state: "Valid"
2023-04-19 16:08:06.733 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [e].[EventId], [e].[Artist], [e].[CategoryId], [e].[CreatedBy], [e].[CreatedDate], [e].[Date], [e].[Description], [e].[ImageUrl], [e].[LastModifiedBy], [e].[LastModifiedDate], [e].[Name], [e].[Price]
FROM [Events] AS [e]
WHERE [e].[EventId] = @__get_Item_0
2023-04-19 16:08:06.737 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__get_Item_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[CategoryId], [c].[CreatedBy], [c].[CreatedDate], [c].[LastModifiedBy], [c].[LastModifiedDate], [c].[Name]
FROM [Categories] AS [c]
WHERE [c].[CategoryId] = @__get_Item_0
2023-04-19 16:08:06.739 +03:00 [INF] Executed action method GloboTicket.TicketManagement.Api.Controllers.EventsController.GetEventById (GloboTicket.TicketManagement.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 8.9893ms.
2023-04-19 16:08:06.740 +03:00 [INF] Executing OkObjectResult, writing value of type 'GloboTicket.TicketManagement.Application.Features.Events.Queries.GetEventDetail.EventDetailVm'.
2023-04-19 16:08:06.741 +03:00 [INF] Executed action GloboTicket.TicketManagement.Api.Controllers.EventsController.GetEventById (GloboTicket.TicketManagement.Api) in 39.5964ms
2023-04-19 16:08:06.742 +03:00 [INF] Executed endpoint 'GloboTicket.TicketManagement.Api.Controllers.EventsController.GetEventById (GloboTicket.TicketManagement.Api)'
2023-04-19 16:08:06.743 +03:00 [INF] HTTP GET /api/Events/3e40abb4-c287-4c76-cf96-08db40d6f24f responded 200 in 44.8051 ms
2023-04-19 16:08:06.745 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/api/Events/3e40abb4-c287-4c76-cf96-08db40d6f24f - - - 200 - application/json;+charset=utf-8 50.4931ms
2023-04-19 16:08:06.752 +03:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7020/api/Category/all - -
2023-04-19 16:08:06.753 +03:00 [INF] CORS policy execution successful.
2023-04-19 16:08:06.754 +03:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7020/api/Category/all - - - 204 - - 2.0503ms
2023-04-19 16:08:06.755 +03:00 [INF] Request starting HTTP/2 GET https://localhost:7020/api/Category/all - -
2023-04-19 16:08:06.756 +03:00 [INF] CORS policy execution successful.
2023-04-19 16:08:06.757 +03:00 [INF] Executing endpoint 'GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetAllCategories (GloboTicket.TicketManagement.Api)'
2023-04-19 16:08:06.758 +03:00 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.List`1[GloboTicket.TicketManagement.Application.Features.Categories.Queries.GetCategoriesList.CategoryListVm]]] GetAllCategories() on controller GloboTicket.TicketManagement.Api.Controllers.CategoryController (GloboTicket.TicketManagement.Api).
2023-04-19 16:08:06.778 +03:00 [INF] Executing action method GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetAllCategories (GloboTicket.TicketManagement.Api) - Validation state: "Valid"
2023-04-19 16:08:06.782 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[CategoryId], [c].[CreatedBy], [c].[CreatedDate], [c].[LastModifiedBy], [c].[LastModifiedDate], [c].[Name]
FROM [Categories] AS [c]
2023-04-19 16:08:06.787 +03:00 [INF] Executed action method GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetAllCategories (GloboTicket.TicketManagement.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 6.8505ms.
2023-04-19 16:08:06.789 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[GloboTicket.TicketManagement.Application.Features.Categories.Queries.GetCategoriesList.CategoryListVm, GloboTicket.TicketManagement.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-04-19 16:08:06.790 +03:00 [INF] Executed action GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetAllCategories (GloboTicket.TicketManagement.Api) in 31.0128ms
2023-04-19 16:08:06.792 +03:00 [INF] Executed endpoint 'GloboTicket.TicketManagement.Api.Controllers.CategoryController.GetAllCategories (GloboTicket.TicketManagement.Api)'
2023-04-19 16:08:06.793 +03:00 [INF] HTTP GET /api/Category/all responded 200 in 35.9427 ms
2023-04-19 16:08:06.794 +03:00 [INF] Request finished HTTP/2 GET https://localhost:7020/api/Category/all - - - 200 - application/json;+charset=utf-8 38.7869ms
